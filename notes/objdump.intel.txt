
add.o:     file format elf32-i386


Disassembly of section .text:

00000000 <add>:
       0:	83 ec 0c                         	sub    esp,0xc
       3:	8b 44 24 10                      	mov    eax,DWORD PTR [esp+0x10]
       7:	03 44 24 14                      	add    eax,DWORD PTR [esp+0x14]
       b:	70 04                            	jo     11 <add+0x11>
       d:	83 c4 0c                         	add    esp,0xc
      10:	c3                               	ret
      11:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
      19:	b9 25 00 00 00                   	mov    ecx,0x25
      1e:	ba 10 00 00 00                   	mov    edx,0x10
      23:	e8 fc ff ff ff                   	call   24 <add+0x24>
      28:	90                               	nop
      29:	90                               	nop
      2a:	90                               	nop
      2b:	90                               	nop
      2c:	90                               	nop
      2d:	90                               	nop
      2e:	90                               	nop
      2f:	90                               	nop

00000030 <os.raise>:
      30:	55                               	push   ebp
      31:	53                               	push   ebx
      32:	57                               	push   edi
      33:	56                               	push   esi
      34:	81 ec 8c 00 00 00                	sub    esp,0x8c
      3a:	89 d5                            	mov    ebp,edx
      3c:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
      40:	8d 54 24 0c                      	lea    edx,[esp+0xc]
      44:	b8 aa aa aa aa                   	mov    eax,0xaaaaaaaa
      49:	b9 20 00 00 00                   	mov    ecx,0x20
      4e:	89 d7                            	mov    edi,edx
      50:	f3 ab                            	rep stos DWORD PTR es:[edi],eax
      52:	b8 af 00 00 00                   	mov    eax,0xaf
      57:	31 db                            	xor    ebx,ebx
      59:	b9 f0 05 00 00                   	mov    ecx,0x5f0
      5e:	be 08 00 00 00                   	mov    esi,0x8
      63:	cd 80                            	int    0x80
      65:	31 c9                            	xor    ecx,ecx
      67:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
      6c:	72 04                            	jb     72 <os.raise+0x42>
      6e:	f7 d8                            	neg    eax
      70:	89 c1                            	mov    ecx,eax
      72:	66 85 c9                         	test   cx,cx
      75:	75 6f                            	jne    e6 <os.raise+0xb6>
      77:	b8 e0 00 00 00                   	mov    eax,0xe0
      7c:	cd 80                            	int    0x80
      7e:	89 c3                            	mov    ebx,eax
      80:	89 e8                            	mov    eax,ebp
      82:	0f b6 c8                         	movzx  ecx,al
      85:	b8 ee 00 00 00                   	mov    eax,0xee
      8a:	cd 80                            	int    0x80
      8c:	89 c7                            	mov    edi,eax
      8e:	8d 4c 24 0c                      	lea    ecx,[esp+0xc]
      92:	31 ed                            	xor    ebp,ebp
      94:	b8 af 00 00 00                   	mov    eax,0xaf
      99:	bb 02 00 00 00                   	mov    ebx,0x2
      9e:	31 d2                            	xor    edx,edx
      a0:	cd 80                            	int    0x80
      a2:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
      a7:	72 04                            	jb     ad <os.raise+0x7d>
      a9:	f7 d8                            	neg    eax
      ab:	89 c5                            	mov    ebp,eax
      ad:	66 85 ed                         	test   bp,bp
      b0:	75 39                            	jne    eb <os.raise+0xbb>
      b2:	31 c0                            	xor    eax,eax
      b4:	81 ff 01 f0 ff ff                	cmp    edi,0xfffff001
      ba:	72 07                            	jb     c3 <os.raise+0x93>
      bc:	0f b7 cf                         	movzx  ecx,di
      bf:	85 c9                            	test   ecx,ecx
      c1:	75 0b                            	jne    ce <os.raise+0x9e>
      c3:	81 c4 8c 00 00 00                	add    esp,0x8c
      c9:	5e                               	pop    esi
      ca:	5f                               	pop    edi
      cb:	5b                               	pop    ebx
      cc:	5d                               	pop    ebp
      cd:	c3                               	ret
      ce:	8b 74 24 08                      	mov    esi,DWORD PTR [esp+0x8]
      d2:	89 f1                            	mov    ecx,esi
      d4:	e8 9c 0c 00 00                   	call   d75 <debug.StackIterator.next_internal+0xb5>
      d9:	89 f1                            	mov    ecx,esi
      db:	e8 9c 0c 00 00                   	call   d7c <debug.StackIterator.next_internal+0xbc>
      e0:	66 b8 0f 00                      	mov    ax,0xf
      e4:	eb dd                            	jmp    c3 <os.raise+0x93>
      e6:	0f b7 c1                         	movzx  eax,cx
      e9:	eb 03                            	jmp    ee <os.raise+0xbe>
      eb:	0f b7 c5                         	movzx  eax,bp
      ee:	83 f8 0e                         	cmp    eax,0xe
      f1:	74 03                            	je     f6 <os.raise+0xc6>
      f3:	83 f8 16                         	cmp    eax,0x16
      f6:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
      fe:	b9 e1 00 00 00                   	mov    ecx,0xe1
     103:	ba 18 00 00 00                   	mov    edx,0x18
     108:	e8 fc ff ff ff                   	call   109 <os.raise+0xd9>
     10d:	90                               	nop
     10e:	90                               	nop
     10f:	90                               	nop

00000110 <os.sigaction>:
     110:	53                               	push   ebx
     111:	57                               	push   edi
     112:	56                               	push   esi
     113:	83 ec 20                         	sub    esp,0x20
     116:	89 d0                            	mov    eax,edx
     118:	24 3f                            	and    al,0x3f
     11a:	3c 09                            	cmp    al,0x9
     11c:	0f 84 e3 00 00 00                	je     205 <os.sigaction+0xf5>
     122:	89 cf                            	mov    edi,ecx
     124:	8b 4c 24 30                      	mov    ecx,DWORD PTR [esp+0x30]
     128:	c7 44 24 18 aa aa aa aa          	mov    DWORD PTR [esp+0x18],0xaaaaaaaa
     130:	c7 44 24 14 aa aa aa aa          	mov    DWORD PTR [esp+0x14],0xaaaaaaaa
     138:	c7 44 24 10 aa aa aa aa          	mov    DWORD PTR [esp+0x10],0xaaaaaaaa
     140:	c7 44 24 0c aa aa aa aa          	mov    DWORD PTR [esp+0xc],0xaaaaaaaa
     148:	c7 44 24 08 aa aa aa aa          	mov    DWORD PTR [esp+0x8],0xaaaaaaaa
     150:	85 c9                            	test   ecx,ecx
     152:	74 4e                            	je     1a2 <os.sigaction+0x92>
     154:	8b 31                            	mov    esi,DWORD PTR [ecx]
     156:	8b 81 84 00 00 00                	mov    eax,DWORD PTR [ecx+0x84]
     15c:	bb 10 0e 00 00                   	mov    ebx,0xe10
     161:	a8 04                            	test   al,0x4
     163:	74 05                            	je     16a <os.sigaction+0x5a>
     165:	bb 00 0e 00 00                   	mov    ebx,0xe00
     16a:	89 74 24 08                      	mov    DWORD PTR [esp+0x8],esi
     16e:	0d 00 00 00 04                   	or     eax,0x4000000
     173:	89 44 24 0c                      	mov    DWORD PTR [esp+0xc],eax
     177:	8d 74 24 14                      	lea    esi,[esp+0x14]
     17b:	89 5c 24 10                      	mov    DWORD PTR [esp+0x10],ebx
     17f:	8d 41 04                         	lea    eax,[ecx+0x4]
     182:	8d 59 0c                         	lea    ebx,[ecx+0xc]
     185:	39 de                            	cmp    esi,ebx
     187:	73 0c                            	jae    195 <os.sigaction+0x85>
     189:	8d 74 24 1c                      	lea    esi,[esp+0x1c]
     18d:	39 f0                            	cmp    eax,esi
     18f:	0f 82 87 00 00 00                	jb     21c <os.sigaction+0x10c>
     195:	8b 30                            	mov    esi,DWORD PTR [eax]
     197:	8b 40 04                         	mov    eax,DWORD PTR [eax+0x4]
     19a:	89 44 24 18                      	mov    DWORD PTR [esp+0x18],eax
     19e:	89 74 24 14                      	mov    DWORD PTR [esp+0x14],esi
     1a2:	85 c9                            	test   ecx,ecx
     1a4:	74 04                            	je     1aa <os.sigaction+0x9a>
     1a6:	8d 4c 24 08                      	lea    ecx,[esp+0x8]
     1aa:	0f b6 da                         	movzx  ebx,dl
     1ad:	83 e3 3f                         	and    ebx,0x3f
     1b0:	b8 ae 00 00 00                   	mov    eax,0xae
     1b5:	31 d2                            	xor    edx,edx
     1b7:	be 08 00 00 00                   	mov    esi,0x8
     1bc:	cd 80                            	int    0x80
     1be:	89 c1                            	mov    ecx,eax
     1c0:	66 85 c9                         	test   cx,cx
     1c3:	75 0c                            	jne    1d1 <os.sigaction+0xc1>
     1c5:	31 c0                            	xor    eax,eax
     1c7:	81 f9 01 f0 ff ff                	cmp    ecx,0xfffff001
     1cd:	72 0e                            	jb     1dd <os.sigaction+0xcd>
     1cf:	eb 0e                            	jmp    1df <os.sigaction+0xcf>
     1d1:	89 c8                            	mov    eax,ecx
     1d3:	f7 d8                            	neg    eax
     1d5:	81 f9 01 f0 ff ff                	cmp    ecx,0xfffff001
     1db:	73 02                            	jae    1df <os.sigaction+0xcf>
     1dd:	31 c0                            	xor    eax,eax
     1df:	66 85 c0                         	test   ax,ax
     1e2:	75 07                            	jne    1eb <os.sigaction+0xdb>
     1e4:	83 c4 20                         	add    esp,0x20
     1e7:	5e                               	pop    esi
     1e8:	5f                               	pop    edi
     1e9:	5b                               	pop    ebx
     1ea:	c3                               	ret
     1eb:	0f b7 c0                         	movzx  eax,ax
     1ee:	83 f8 16                         	cmp    eax,0x16
     1f1:	74 05                            	je     1f8 <os.sigaction+0xe8>
     1f3:	83 f8 26                         	cmp    eax,0x26
     1f6:	75 0d                            	jne    205 <os.sigaction+0xf5>
     1f8:	89 f9                            	mov    ecx,edi
     1fa:	e8 9c 0c 00 00                   	call   e9b <heap.PageAllocator.alloc+0x7b>
     1ff:	66 b8 10 00                      	mov    ax,0x10
     203:	eb df                            	jmp    1e4 <os.sigaction+0xd4>
     205:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     20d:	b9 e1 00 00 00                   	mov    ecx,0xe1
     212:	ba 18 00 00 00                   	mov    edx,0x18
     217:	e8 fc ff ff ff                   	call   218 <os.sigaction+0x108>
     21c:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     224:	b9 7a 00 00 00                   	mov    ecx,0x7a
     229:	ba 17 00 00 00                   	mov    edx,0x17
     22e:	e8 fc ff ff ff                   	call   22f <os.sigaction+0x11f>
     233:	90                               	nop
     234:	90                               	nop
     235:	90                               	nop
     236:	90                               	nop
     237:	90                               	nop
     238:	90                               	nop
     239:	90                               	nop
     23a:	90                               	nop
     23b:	90                               	nop
     23c:	90                               	nop
     23d:	90                               	nop
     23e:	90                               	nop
     23f:	90                               	nop

00000240 <os.exit>:
     240:	83 ec 0c                         	sub    esp,0xc
     243:	e8 48 0a 00 00                   	call   c90 <os.linux.exit_group>
     248:	90                               	nop
     249:	90                               	nop
     24a:	90                               	nop
     24b:	90                               	nop
     24c:	90                               	nop
     24d:	90                               	nop
     24e:	90                               	nop
     24f:	90                               	nop

00000250 <os.mmap>:
     250:	55                               	push   ebp
     251:	53                               	push   ebx
     252:	57                               	push   edi
     253:	56                               	push   esi
     254:	83 ec 0c                         	sub    esp,0xc
     257:	89 54 24 08                      	mov    DWORD PTR [esp+0x8],edx
     25b:	89 cd                            	mov    ebp,ecx
     25d:	8b 4c 24 24                      	mov    ecx,DWORD PTR [esp+0x24]
     261:	8b 5c 24 20                      	mov    ebx,DWORD PTR [esp+0x20]
     265:	8b 54 24 28                      	mov    edx,DWORD PTR [esp+0x28]
     269:	8b 74 24 2c                      	mov    esi,DWORD PTR [esp+0x2c]
     26d:	8b 7c 24 30                      	mov    edi,DWORD PTR [esp+0x30]
     271:	b8 c0 00 00 00                   	mov    eax,0xc0
     276:	ff 35 04 00 00 00                	push   DWORD PTR ds:0x4
     27c:	55                               	push   ebp
     27d:	8b 6c 24 04                      	mov    ebp,DWORD PTR [esp+0x4]
     281:	cd 80                            	int    0x80
     283:	5d                               	pop    ebp
     284:	83 c4 04                         	add    esp,0x4
     287:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
     28c:	73 04                            	jae    292 <os.mmap+0x42>
     28e:	31 d2                            	xor    edx,edx
     290:	eb 04                            	jmp    296 <os.mmap+0x46>
     292:	89 c2                            	mov    edx,eax
     294:	f7 da                            	neg    edx
     296:	66 83 fa 4b                      	cmp    dx,0x4b
     29a:	77 67                            	ja     303 <os.mmap+0xb3>
     29c:	0f b7 d2                         	movzx  edx,dx
     29f:	ff 24 95 00 00 00 00             	jmp    DWORD PTR [edx*4+0x0]
     2a6:	85 c0                            	test   eax,eax
     2a8:	0f 84 e2 00 00 00                	je     390 <os.mmap+0x140>
     2ae:	a9 ff 0f 00 00                   	test   eax,0xfff
     2b3:	0f 85 ee 00 00 00                	jne    3a7 <os.mmap+0x157>
     2b9:	89 45 00                         	mov    DWORD PTR [ebp+0x0],eax
     2bc:	89 4d 04                         	mov    DWORD PTR [ebp+0x4],ecx
     2bf:	66 c7 45 08 00 00                	mov    WORD PTR [ebp+0x8],0x0
     2c5:	e9 a7 00 00 00                   	jmp    371 <os.mmap+0x121>
     2ca:	8b 4c 24 08                      	mov    ecx,DWORD PTR [esp+0x8]
     2ce:	e8 9c 0c 00 00                   	call   f6f <heap.PageAllocator.resize+0x6f>
     2d3:	c7 45 08 07 00 00 00             	mov    DWORD PTR [ebp+0x8],0x7
     2da:	e9 84 00 00 00                   	jmp    363 <os.mmap+0x113>
     2df:	8b 4c 24 08                      	mov    ecx,DWORD PTR [esp+0x8]
     2e3:	e8 9c 0c 00 00                   	call   f84 <heap.PageAllocator.resize+0x84>
     2e8:	c7 45 08 20 00 00 00             	mov    DWORD PTR [ebp+0x8],0x20
     2ef:	eb 72                            	jmp    363 <os.mmap+0x113>
     2f1:	8b 4c 24 08                      	mov    ecx,DWORD PTR [esp+0x8]
     2f5:	e8 9c 0c 00 00                   	call   f96 <heap.PageAllocator.resize+0x96>
     2fa:	c7 45 08 29 00 00 00             	mov    DWORD PTR [ebp+0x8],0x29
     301:	eb 60                            	jmp    363 <os.mmap+0x113>
     303:	8b 74 24 08                      	mov    esi,DWORD PTR [esp+0x8]
     307:	89 f1                            	mov    ecx,esi
     309:	e8 9c 0c 00 00                   	call   faa <heap.PageAllocator.resize+0xaa>
     30e:	89 f1                            	mov    ecx,esi
     310:	e8 9c 0c 00 00                   	call   fb1 <heap.PageAllocator.free+0x1>
     315:	66 c7 45 08 0f 00                	mov    WORD PTR [ebp+0x8],0xf
     31b:	eb 54                            	jmp    371 <os.mmap+0x121>
     31d:	8b 4c 24 08                      	mov    ecx,DWORD PTR [esp+0x8]
     321:	e8 9c 0c 00 00                   	call   fc2 <heap.PageAllocator.free+0x12>
     326:	c7 45 08 2e 00 00 00             	mov    DWORD PTR [ebp+0x8],0x2e
     32d:	eb 34                            	jmp    363 <os.mmap+0x113>
     32f:	8b 4c 24 08                      	mov    ecx,DWORD PTR [esp+0x8]
     333:	e8 9c 0c 00 00                   	call   fd4 <heap.PageAllocator.free+0x24>
     338:	c7 45 08 14 00 00 00             	mov    DWORD PTR [ebp+0x8],0x14
     33f:	eb 22                            	jmp    363 <os.mmap+0x113>
     341:	8b 4c 24 08                      	mov    ecx,DWORD PTR [esp+0x8]
     345:	e8 9c 0c 00 00                   	call   fe6 <heap.PageAllocator.free+0x36>
     34a:	c7 45 08 2d 00 00 00             	mov    DWORD PTR [ebp+0x8],0x2d
     351:	eb 10                            	jmp    363 <os.mmap+0x113>
     353:	8b 4c 24 08                      	mov    ecx,DWORD PTR [esp+0x8]
     357:	e8 9c 0c 00 00                   	call   ff8 <heap.PageAllocator.free+0x48>
     35c:	c7 45 08 1f 00 00 00             	mov    DWORD PTR [ebp+0x8],0x1f
     363:	c7 45 04 00 00 00 00             	mov    DWORD PTR [ebp+0x4],0x0
     36a:	c7 45 00 00 00 00 00             	mov    DWORD PTR [ebp+0x0],0x0
     371:	83 c4 0c                         	add    esp,0xc
     374:	5e                               	pop    esi
     375:	5f                               	pop    edi
     376:	5b                               	pop    ebx
     377:	5d                               	pop    ebp
     378:	c3                               	ret
     379:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     381:	b9 e1 00 00 00                   	mov    ecx,0xe1
     386:	ba 18 00 00 00                   	mov    edx,0x18
     38b:	e8 fc ff ff ff                   	call   38c <os.mmap+0x13c>
     390:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     398:	b9 aa 00 00 00                   	mov    ecx,0xaa
     39d:	ba 1e 00 00 00                   	mov    edx,0x1e
     3a2:	e8 fc ff ff ff                   	call   3a3 <os.mmap+0x153>
     3a7:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     3af:	b9 36 00 00 00                   	mov    ecx,0x36
     3b4:	ba 13 00 00 00                   	mov    edx,0x13
     3b9:	e8 fc ff ff ff                   	call   3ba <os.mmap+0x16a>
     3be:	90                               	nop
     3bf:	90                               	nop

000003c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes>:
     3c0:	55                               	push   ebp
     3c1:	53                               	push   ebx
     3c2:	57                               	push   edi
     3c3:	56                               	push   esi
     3c4:	81 ec 2c 01 00 00                	sub    esp,0x12c
     3ca:	89 54 24 18                      	mov    DWORD PTR [esp+0x18],edx
     3ce:	89 4c 24 14                      	mov    DWORD PTR [esp+0x14],ecx
     3d2:	8b b4 24 44 01 00 00             	mov    esi,DWORD PTR [esp+0x144]
     3d9:	8b 84 24 40 01 00 00             	mov    eax,DWORD PTR [esp+0x140]
     3e0:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
     3e4:	8d 44 24 2c                      	lea    eax,[esp+0x2c]
     3e8:	89 04 24                         	mov    DWORD PTR [esp],eax
     3eb:	c7 44 24 08 00 01 00 00          	mov    DWORD PTR [esp+0x8],0x100
     3f3:	e8 fc ff ff ff                   	call   3f4 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0x34>
     3f8:	85 f6                            	test   esi,esi
     3fa:	74 66                            	je     462 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0xa2>
     3fc:	90                               	nop
     3fd:	90                               	nop
     3fe:	90                               	nop
     3ff:	90                               	nop
     400:	89 f7                            	mov    edi,esi
     402:	89 74 24 1c                      	mov    DWORD PTR [esp+0x1c],esi
     406:	81 fe 00 01 00 00                	cmp    esi,0x100
     40c:	72 05                            	jb     413 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0x53>
     40e:	bf 00 01 00 00                   	mov    edi,0x100
     413:	8b 44 24 18                      	mov    eax,DWORD PTR [esp+0x18]
     417:	8b 18                            	mov    ebx,DWORD PTR [eax]
     419:	31 f6                            	xor    esi,esi
     41b:	90                               	nop
     41c:	90                               	nop
     41d:	90                               	nop
     41e:	90                               	nop
     41f:	90                               	nop
     420:	89 f8                            	mov    eax,edi
     422:	29 f0                            	sub    eax,esi
     424:	72 5f                            	jb     485 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0xc5>
     426:	8d 0c 34                         	lea    ecx,[esp+esi*1]
     429:	83 c1 2c                         	add    ecx,0x2c
     42c:	89 44 24 08                      	mov    DWORD PTR [esp+0x8],eax
     430:	89 4c 24 04                      	mov    DWORD PTR [esp+0x4],ecx
     434:	89 1c 24                         	mov    DWORD PTR [esp],ebx
     437:	8d 4c 24 20                      	lea    ecx,[esp+0x20]
     43b:	8b 54 24 14                      	mov    edx,DWORD PTR [esp+0x14]
     43f:	e8 7c 01 00 00                   	call   5c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write>
     444:	0f b7 6c 24 24                   	movzx  ebp,WORD PTR [esp+0x24]
     449:	66 85 ed                         	test   bp,bp
     44c:	75 18                            	jne    466 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0xa6>
     44e:	03 74 24 20                      	add    esi,DWORD PTR [esp+0x20]
     452:	72 48                            	jb     49c <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0xdc>
     454:	39 f7                            	cmp    edi,esi
     456:	75 c8                            	jne    420 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0x60>
     458:	8b 74 24 1c                      	mov    esi,DWORD PTR [esp+0x1c]
     45c:	29 fe                            	sub    esi,edi
     45e:	72 3c                            	jb     49c <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0xdc>
     460:	75 9e                            	jne    400 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0x40>
     462:	31 ed                            	xor    ebp,ebp
     464:	eb 12                            	jmp    478 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0xb8>
     466:	8b 74 24 14                      	mov    esi,DWORD PTR [esp+0x14]
     46a:	89 f1                            	mov    ecx,esi
     46c:	e8 9c 0c 00 00                   	call   110d <heap.arena_allocator.ArenaAllocator.alloc+0xbd>
     471:	89 f1                            	mov    ecx,esi
     473:	e8 9c 0c 00 00                   	call   1114 <heap.arena_allocator.ArenaAllocator.alloc+0xc4>
     478:	89 e8                            	mov    eax,ebp
     47a:	81 c4 2c 01 00 00                	add    esp,0x12c
     480:	5e                               	pop    esi
     481:	5f                               	pop    edi
     482:	5b                               	pop    ebx
     483:	5d                               	pop    ebp
     484:	c3                               	ret
     485:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     48d:	b9 00 00 00 00                   	mov    ecx,0x0
     492:	ba 24 00 00 00                   	mov    edx,0x24
     497:	e8 fc ff ff ff                   	call   498 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0xd8>
     49c:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     4a4:	b9 25 00 00 00                   	mov    ecx,0x25
     4a9:	ba 10 00 00 00                   	mov    edx,0x10
     4ae:	e8 fc ff ff ff                   	call   4af <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes+0xef>
     4b3:	90                               	nop
     4b4:	90                               	nop
     4b5:	90                               	nop
     4b6:	90                               	nop
     4b7:	90                               	nop
     4b8:	90                               	nop
     4b9:	90                               	nop
     4ba:	90                               	nop
     4bb:	90                               	nop
     4bc:	90                               	nop
     4bd:	90                               	nop
     4be:	90                               	nop
     4bf:	90                               	nop

000004c0 <debug.StackIterator.isValidMemory>:
     4c0:	53                               	push   ebx
     4c1:	56                               	push   esi
     4c2:	81 ec 94 00 00 00                	sub    esp,0x94
     4c8:	8d 44 24 14                      	lea    eax,[esp+0x14]
     4cc:	89 44 24 0c                      	mov    DWORD PTR [esp+0xc],eax
     4d0:	c7 44 24 10 20 00 00 00          	mov    DWORD PTR [esp+0x10],0x20
     4d8:	c7 44 24 08 00 00 00 00          	mov    DWORD PTR [esp+0x8],0x0
     4e0:	31 f6                            	xor    esi,esi
     4e2:	81 e1 00 f0 ff ff                	and    ecx,0xfffff000
     4e8:	74 3f                            	je     529 <debug.StackIterator.isValidMemory+0x69>
     4ea:	b8 90 00 00 00                   	mov    eax,0x90
     4ef:	89 cb                            	mov    ebx,ecx
     4f1:	b9 00 10 00 00                   	mov    ecx,0x1000
     4f6:	ba 01 00 00 00                   	mov    edx,0x1
     4fb:	cd 80                            	int    0x80
     4fd:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
     502:	72 04                            	jb     508 <debug.StackIterator.isValidMemory+0x48>
     504:	f7 d8                            	neg    eax
     506:	89 c6                            	mov    esi,eax
     508:	b0 01                            	mov    al,0x1
     50a:	66 85 f6                         	test   si,si
     50d:	75 09                            	jne    518 <debug.StackIterator.isValidMemory+0x58>
     50f:	81 c4 94 00 00 00                	add    esp,0x94
     515:	5e                               	pop    esi
     516:	5b                               	pop    ebx
     517:	c3                               	ret
     518:	0f b7 c6                         	movzx  eax,si
     51b:	83 f8 0c                         	cmp    eax,0xc
     51e:	75 14                            	jne    534 <debug.StackIterator.isValidMemory+0x74>
     520:	8d 4c 24 08                      	lea    ecx,[esp+0x8]
     524:	e8 9c 0c 00 00                   	call   11c5 <heap.arena_allocator.ArenaAllocator.alloc+0x175>
     529:	31 c0                            	xor    eax,eax
     52b:	81 c4 94 00 00 00                	add    esp,0x94
     531:	5e                               	pop    esi
     532:	5b                               	pop    ebx
     533:	c3                               	ret
     534:	83 f8 16                         	cmp    eax,0x16
     537:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     53f:	b9 e1 00 00 00                   	mov    ecx,0xe1
     544:	ba 18 00 00 00                   	mov    edx,0x18
     549:	e8 fc ff ff ff                   	call   54a <debug.StackIterator.isValidMemory+0x8a>
     54e:	90                               	nop
     54f:	90                               	nop

00000550 <os.linux.x86.getContextInternal>:
     550:	c7 02 00 00 00 00                	mov    DWORD PTR [edx],0x0
     556:	c7 42 04 00 00 00 00             	mov    DWORD PTR [edx+0x4],0x0
     55d:	89 7a 24                         	mov    DWORD PTR [edx+0x24],edi
     560:	89 72 28                         	mov    DWORD PTR [edx+0x28],esi
     563:	89 6a 2c                         	mov    DWORD PTR [edx+0x2c],ebp
     566:	89 5a 34                         	mov    DWORD PTR [edx+0x34],ebx
     569:	89 52 38                         	mov    DWORD PTR [edx+0x38],edx
     56c:	89 4a 3c                         	mov    DWORD PTR [edx+0x3c],ecx
     56f:	89 42 40                         	mov    DWORD PTR [edx+0x40],eax
     572:	8b 0c 24                         	mov    ecx,DWORD PTR [esp]
     575:	89 4a 4c                         	mov    DWORD PTR [edx+0x4c],ecx
     578:	8d 4c 24 04                      	lea    ecx,[esp+0x4]
     57c:	89 4a 30                         	mov    DWORD PTR [edx+0x30],ecx
     57f:	31 c9                            	xor    ecx,ecx
     581:	66 8c e1                         	mov    cx,fs
     584:	89 4a 18                         	mov    DWORD PTR [edx+0x18],ecx
     587:	8d 8a ec 00 00 00                	lea    ecx,[edx+0xec]
     58d:	89 4a 60                         	mov    DWORD PTR [edx+0x60],ecx
     590:	d9 31                            	fnstenv [ecx]
     592:	d9 21                            	fldenv [ecx]
     594:	53                               	push   ebx
     595:	56                               	push   esi
     596:	31 db                            	xor    ebx,ebx
     598:	b8 ba 00 00 00                   	mov    eax,0xba
     59d:	8d 4a 08                         	lea    ecx,[edx+0x8]
     5a0:	cd 80                            	int    0x80
     5a2:	85 c0                            	test   eax,eax
     5a4:	75 11                            	jne    5b7 <os.linux.x86.getContextInternal+0x67>
     5a6:	b8 af 00 00 00                   	mov    eax,0xaf
     5ab:	31 c9                            	xor    ecx,ecx
     5ad:	8d 52 6c                         	lea    edx,[edx+0x6c]
     5b0:	be 08 00 00 00                   	mov    esi,0x8
     5b5:	cd 80                            	int    0x80
     5b7:	5e                               	pop    esi
     5b8:	5b                               	pop    ebx
     5b9:	c3                               	ret
     5ba:	0f 0b                            	ud2
     5bc:	90                               	nop
     5bd:	90                               	nop
     5be:	90                               	nop
     5bf:	90                               	nop

000005c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write>:
     5c0:	55                               	push   ebp
     5c1:	53                               	push   ebx
     5c2:	57                               	push   edi
     5c3:	56                               	push   esi
     5c4:	83 ec 0c                         	sub    esp,0xc
     5c7:	89 d7                            	mov    edi,edx
     5c9:	89 ce                            	mov    esi,ecx
     5cb:	8b 54 24 28                      	mov    edx,DWORD PTR [esp+0x28]
     5cf:	85 d2                            	test   edx,edx
     5d1:	74 52                            	je     625 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0x65>
     5d3:	81 fa 00 f0 ff 7f                	cmp    edx,0x7ffff000
     5d9:	72 05                            	jb     5e0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0x20>
     5db:	ba 00 f0 ff 7f                   	mov    edx,0x7ffff000
     5e0:	8b 4c 24 24                      	mov    ecx,DWORD PTR [esp+0x24]
     5e4:	8b 5c 24 20                      	mov    ebx,DWORD PTR [esp+0x20]
     5e8:	eb 0e                            	jmp    5f8 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0x38>
     5ea:	90                               	nop
     5eb:	90                               	nop
     5ec:	90                               	nop
     5ed:	90                               	nop
     5ee:	90                               	nop
     5ef:	90                               	nop
     5f0:	31 ed                            	xor    ebp,ebp
     5f2:	66 83 fd 04                      	cmp    bp,0x4
     5f6:	75 18                            	jne    610 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0x50>
     5f8:	b8 04 00 00 00                   	mov    eax,0x4
     5fd:	cd 80                            	int    0x80
     5ff:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
     604:	72 ea                            	jb     5f0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0x30>
     606:	89 c5                            	mov    ebp,eax
     608:	f7 dd                            	neg    ebp
     60a:	66 83 fd 04                      	cmp    bp,0x4
     60e:	74 e8                            	je     5f8 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0x38>
     610:	0f b7 cd                         	movzx  ecx,bp
     613:	83 f9 7a                         	cmp    ecx,0x7a
     616:	77 4f                            	ja     667 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xa7>
     618:	ff 24 8d 30 01 00 00             	jmp    DWORD PTR [ecx*4+0x130]
     61f:	66 bd 07 00                      	mov    bp,0x7
     623:	eb 4d                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     625:	31 c0                            	xor    eax,eax
     627:	31 ed                            	xor    ebp,ebp
     629:	eb 5e                            	jmp    689 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xc9>
     62b:	66 bd 03 00                      	mov    bp,0x3
     62f:	eb 41                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     631:	66 bd 0b 00                      	mov    bp,0xb
     635:	eb 3b                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     637:	66 bd 0d 00                      	mov    bp,0xd
     63b:	eb 35                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     63d:	66 bd 05 00                      	mov    bp,0x5
     641:	eb 2f                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     643:	66 bd 06 00                      	mov    bp,0x6
     647:	eb 29                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     649:	66 bd 02 00                      	mov    bp,0x2
     64d:	eb 23                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     64f:	66 bd 04 00                      	mov    bp,0x4
     653:	eb 1d                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     655:	66 bd 08 00                      	mov    bp,0x8
     659:	eb 17                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     65b:	66 bd 0e 00                      	mov    bp,0xe
     65f:	eb 11                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     661:	66 bd 01 00                      	mov    bp,0x1
     665:	eb 0b                            	jmp    672 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xb2>
     667:	89 f9                            	mov    ecx,edi
     669:	e8 9c 0c 00 00                   	call   130a <heap.arena_allocator.ArenaAllocator.createNode+0xa>
     66e:	66 bd 0f 00                      	mov    bp,0xf
     672:	89 f9                            	mov    ecx,edi
     674:	e8 9c 0c 00 00                   	call   1315 <heap.arena_allocator.ArenaAllocator.createNode+0x15>
     679:	89 f9                            	mov    ecx,edi
     67b:	e8 9c 0c 00 00                   	call   131c <heap.arena_allocator.ArenaAllocator.createNode+0x1c>
     680:	89 f9                            	mov    ecx,edi
     682:	e8 9c 0c 00 00                   	call   1323 <heap.arena_allocator.ArenaAllocator.createNode+0x23>
     687:	31 c0                            	xor    eax,eax
     689:	0f b7 cd                         	movzx  ecx,bp
     68c:	89 06                            	mov    DWORD PTR [esi],eax
     68e:	89 4e 04                         	mov    DWORD PTR [esi+0x4],ecx
     691:	83 c4 0c                         	add    esp,0xc
     694:	5e                               	pop    esi
     695:	5f                               	pop    edi
     696:	5b                               	pop    ebx
     697:	5d                               	pop    ebp
     698:	c3                               	ret
     699:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     6a1:	b9 e1 00 00 00                   	mov    ecx,0xe1
     6a6:	ba 18 00 00 00                   	mov    edx,0x18
     6ab:	e8 fc ff ff ff                   	call   6ac <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write+0xec>

000006b0 <fmt.formatBuf__anon_7329>:
     6b0:	55                               	push   ebp
     6b1:	53                               	push   ebx
     6b2:	57                               	push   edi
     6b3:	56                               	push   esi
     6b4:	83 ec 4c                         	sub    esp,0x4c
     6b7:	89 d7                            	mov    edi,edx
     6b9:	89 cd                            	mov    ebp,ecx
     6bb:	8b 4c 24 68                      	mov    ecx,DWORD PTR [esp+0x68]
     6bf:	8b 44 24 64                      	mov    eax,DWORD PTR [esp+0x64]
     6c3:	8b 74 24 60                      	mov    esi,DWORD PTR [esp+0x60]
     6c7:	80 78 0c 00                      	cmp    BYTE PTR [eax+0xc],0x0
     6cb:	89 6c 24 10                      	mov    DWORD PTR [esp+0x10],ebp
     6cf:	0f 84 a7 02 00 00                	je     97c <fmt.formatBuf__anon_7329+0x2cc>
     6d5:	8b 50 08                         	mov    edx,DWORD PTR [eax+0x8]
     6d8:	85 f6                            	test   esi,esi
     6da:	89 54 24 24                      	mov    DWORD PTR [esp+0x24],edx
     6de:	0f 84 f8 02 00 00                	je     9dc <fmt.formatBuf__anon_7329+0x32c>
     6e4:	8b 45 00                         	mov    eax,DWORD PTR [ebp+0x0]
     6e7:	89 44 24 14                      	mov    DWORD PTR [esp+0x14],eax
     6eb:	31 c0                            	xor    eax,eax
     6ed:	8a 2d 02 00 00 00                	mov    ch,BYTE PTR ds:0x2
     6f3:	31 ed                            	xor    ebp,ebp
     6f5:	89 eb                            	mov    ebx,ebp
     6f7:	83 c3 04                         	add    ebx,0x4
     6fa:	73 34                            	jae    730 <fmt.formatBuf__anon_7329+0x80>
     6fc:	e9 17 05 00 00                   	jmp    c18 <fmt.formatBuf__anon_7329+0x568>
     701:	90                               	nop
     702:	90                               	nop
     703:	90                               	nop
     704:	90                               	nop
     705:	90                               	nop
     706:	90                               	nop
     707:	90                               	nop
     708:	90                               	nop
     709:	90                               	nop
     70a:	90                               	nop
     70b:	90                               	nop
     70c:	90                               	nop
     70d:	90                               	nop
     70e:	90                               	nop
     70f:	90                               	nop
     710:	39 f5                            	cmp    ebp,esi
     712:	0f 83 dd 01 00 00                	jae    8f5 <fmt.formatBuf__anon_7329+0x245>
     718:	89 eb                            	mov    ebx,ebp
     71a:	83 c3 04                         	add    ebx,0x4
     71d:	0f 82 f5 04 00 00                	jb     c18 <fmt.formatBuf__anon_7329+0x568>
     723:	90                               	nop
     724:	90                               	nop
     725:	90                               	nop
     726:	90                               	nop
     727:	90                               	nop
     728:	90                               	nop
     729:	90                               	nop
     72a:	90                               	nop
     72b:	90                               	nop
     72c:	90                               	nop
     72d:	90                               	nop
     72e:	90                               	nop
     72f:	90                               	nop
     730:	39 f3                            	cmp    ebx,esi
     732:	77 2c                            	ja     760 <fmt.formatBuf__anon_7329+0xb0>
     734:	8d 55 04                         	lea    edx,[ebp+0x4]
     737:	39 f2                            	cmp    edx,esi
     739:	0f 87 f0 04 00 00                	ja     c2f <fmt.formatBuf__anon_7329+0x57f>
     73f:	f7 04 2f 80 80 80 80             	test   DWORD PTR [edi+ebp*1],0x80808080
     746:	75 18                            	jne    760 <fmt.formatBuf__anon_7329+0xb0>
     748:	83 c0 04                         	add    eax,0x4
     74b:	0f 82 c7 04 00 00                	jb     c18 <fmt.formatBuf__anon_7329+0x568>
     751:	89 dd                            	mov    ebp,ebx
     753:	83 c3 04                         	add    ebx,0x4
     756:	73 d8                            	jae    730 <fmt.formatBuf__anon_7329+0x80>
     758:	e9 bb 04 00 00                   	jmp    c18 <fmt.formatBuf__anon_7329+0x568>
     75d:	90                               	nop
     75e:	90                               	nop
     75f:	90                               	nop
     760:	39 f5                            	cmp    ebp,esi
     762:	73 ac                            	jae    710 <fmt.formatBuf__anon_7329+0x60>
     764:	8a 0c 2f                         	mov    cl,BYTE PTR [edi+ebp*1]
     767:	88 ea                            	mov    dl,ch
     769:	84 c9                            	test   cl,cl
     76b:	79 43                            	jns    7b0 <fmt.formatBuf__anon_7329+0x100>
     76d:	88 ce                            	mov    dh,cl
     76f:	80 e6 e0                         	and    dh,0xe0
     772:	8a 15 02 00 00 00                	mov    dl,BYTE PTR ds:0x2
     778:	80 fe c0                         	cmp    dh,0xc0
     77b:	74 33                            	je     7b0 <fmt.formatBuf__anon_7329+0x100>
     77d:	88 ce                            	mov    dh,cl
     77f:	80 e6 f0                         	and    dh,0xf0
     782:	8a 15 02 00 00 00                	mov    dl,BYTE PTR ds:0x2
     788:	80 fe e0                         	cmp    dh,0xe0
     78b:	74 23                            	je     7b0 <fmt.formatBuf__anon_7329+0x100>
     78d:	88 ce                            	mov    dh,cl
     78f:	80 e6 f8                         	and    dh,0xf8
     792:	8a 15 02 00 00 00                	mov    dl,BYTE PTR ds:0x2
     798:	80 fe f0                         	cmp    dh,0xf0
     79b:	0f 85 38 01 00 00                	jne    8d9 <fmt.formatBuf__anon_7329+0x229>
     7a1:	90                               	nop
     7a2:	90                               	nop
     7a3:	90                               	nop
     7a4:	90                               	nop
     7a5:	90                               	nop
     7a6:	90                               	nop
     7a7:	90                               	nop
     7a8:	90                               	nop
     7a9:	90                               	nop
     7aa:	90                               	nop
     7ab:	90                               	nop
     7ac:	90                               	nop
     7ad:	90                               	nop
     7ae:	90                               	nop
     7af:	90                               	nop
     7b0:	80 e2 07                         	and    dl,0x7
     7b3:	0f b6 d2                         	movzx  edx,dl
     7b6:	89 eb                            	mov    ebx,ebp
     7b8:	01 d3                            	add    ebx,edx
     7ba:	0f 82 58 04 00 00                	jb     c18 <fmt.formatBuf__anon_7329+0x568>
     7c0:	39 f3                            	cmp    ebx,esi
     7c2:	0f 87 1a 01 00 00                	ja     8e2 <fmt.formatBuf__anon_7329+0x232>
     7c8:	80 fa 01                         	cmp    dl,0x1
     7cb:	75 13                            	jne    7e0 <fmt.formatBuf__anon_7329+0x130>
     7cd:	40                               	inc    eax
     7ce:	0f 84 44 04 00 00                	je     c18 <fmt.formatBuf__anon_7329+0x568>
     7d4:	89 dd                            	mov    ebp,ebx
     7d6:	e9 35 ff ff ff                   	jmp    710 <fmt.formatBuf__anon_7329+0x60>
     7db:	90                               	nop
     7dc:	90                               	nop
     7dd:	90                               	nop
     7de:	90                               	nop
     7df:	90                               	nop
     7e0:	4a                               	dec    edx
     7e1:	83 fa 03                         	cmp    edx,0x3
     7e4:	0f 87 73 04 00 00                	ja     c5d <fmt.formatBuf__anon_7329+0x5ad>
     7ea:	ff 24 95 1c 03 00 00             	jmp    DWORD PTR [edx*4+0x31c]
     7f1:	89 ca                            	mov    edx,ecx
     7f3:	80 e2 e0                         	and    dl,0xe0
     7f6:	80 fa c0                         	cmp    dl,0xc0
     7f9:	0f 85 5e 04 00 00                	jne    c5d <fmt.formatBuf__anon_7329+0x5ad>
     7ff:	0f b6 54 2f 01                   	movzx  edx,BYTE PTR [edi+ebp*1+0x1]
     804:	80 e2 c0                         	and    dl,0xc0
     807:	80 fa 80                         	cmp    dl,0x80
     80a:	0f 85 c0 00 00 00                	jne    8d0 <fmt.formatBuf__anon_7329+0x220>
     810:	80 e1 1e                         	and    cl,0x1e
     813:	75 b8                            	jne    7cd <fmt.formatBuf__anon_7329+0x11d>
     815:	e9 b6 00 00 00                   	jmp    8d0 <fmt.formatBuf__anon_7329+0x220>
     81a:	89 ca                            	mov    edx,ecx
     81c:	80 e2 f0                         	and    dl,0xf0
     81f:	80 fa e0                         	cmp    dl,0xe0
     822:	0f 85 35 04 00 00                	jne    c5d <fmt.formatBuf__anon_7329+0x5ad>
     828:	0f b6 54 2f 01                   	movzx  edx,BYTE PTR [edi+ebp*1+0x1]
     82d:	88 d6                            	mov    dh,dl
     82f:	80 e6 c0                         	and    dh,0xc0
     832:	80 fe 80                         	cmp    dh,0x80
     835:	0f 85 95 00 00 00                	jne    8d0 <fmt.formatBuf__anon_7329+0x220>
     83b:	8a 74 2f 02                      	mov    dh,BYTE PTR [edi+ebp*1+0x2]
     83f:	80 e6 c0                         	and    dh,0xc0
     842:	80 fe 80                         	cmp    dh,0x80
     845:	0f 85 85 00 00 00                	jne    8d0 <fmt.formatBuf__anon_7329+0x220>
     84b:	80 e1 0f                         	and    cl,0xf
     84e:	0f b6 e9                         	movzx  ebp,cl
     851:	80 e2 3f                         	and    dl,0x3f
     854:	0f b6 d2                         	movzx  edx,dl
     857:	c1 e5 0c                         	shl    ebp,0xc
     85a:	c1 e2 06                         	shl    edx,0x6
     85d:	09 ea                            	or     edx,ebp
     85f:	81 fa 00 08 00 00                	cmp    edx,0x800
     865:	72 69                            	jb     8d0 <fmt.formatBuf__anon_7329+0x220>
     867:	81 e2 00 f8 00 00                	and    edx,0xf800
     86d:	81 fa 00 d8 00 00                	cmp    edx,0xd800
     873:	0f 85 54 ff ff ff                	jne    7cd <fmt.formatBuf__anon_7329+0x11d>
     879:	eb 55                            	jmp    8d0 <fmt.formatBuf__anon_7329+0x220>
     87b:	89 ca                            	mov    edx,ecx
     87d:	80 e2 f8                         	and    dl,0xf8
     880:	80 fa f0                         	cmp    dl,0xf0
     883:	0f 85 d4 03 00 00                	jne    c5d <fmt.formatBuf__anon_7329+0x5ad>
     889:	0f b6 54 2f 01                   	movzx  edx,BYTE PTR [edi+ebp*1+0x1]
     88e:	88 d6                            	mov    dh,dl
     890:	80 e6 c0                         	and    dh,0xc0
     893:	80 fe 80                         	cmp    dh,0x80
     896:	75 38                            	jne    8d0 <fmt.formatBuf__anon_7329+0x220>
     898:	8a 74 2f 02                      	mov    dh,BYTE PTR [edi+ebp*1+0x2]
     89c:	80 e6 c0                         	and    dh,0xc0
     89f:	80 fe 80                         	cmp    dh,0x80
     8a2:	75 2c                            	jne    8d0 <fmt.formatBuf__anon_7329+0x220>
     8a4:	8a 74 2f 03                      	mov    dh,BYTE PTR [edi+ebp*1+0x3]
     8a8:	80 e6 c0                         	and    dh,0xc0
     8ab:	80 fe 80                         	cmp    dh,0x80
     8ae:	75 20                            	jne    8d0 <fmt.formatBuf__anon_7329+0x220>
     8b0:	0f b6 e9                         	movzx  ebp,cl
     8b3:	80 e2 30                         	and    dl,0x30
     8b6:	0f b6 d2                         	movzx  edx,dl
     8b9:	c1 e5 1d                         	shl    ebp,0x1d
     8bc:	c1 e2 17                         	shl    edx,0x17
     8bf:	01 ea                            	add    edx,ebp
     8c1:	81 c2 00 00 00 78                	add    edx,0x78000000
     8c7:	c1 fa 0b                         	sar    edx,0xb
     8ca:	0f 88 fd fe ff ff                	js     7cd <fmt.formatBuf__anon_7329+0x11d>
     8d0:	8b 4c 24 10                      	mov    ecx,DWORD PTR [esp+0x10]
     8d4:	e8 9c 0c 00 00                   	call   1575 <heap.arena_allocator.ArenaAllocator.free+0x135>
     8d9:	8b 4c 24 10                      	mov    ecx,DWORD PTR [esp+0x10]
     8dd:	e8 9c 0c 00 00                   	call   157e <heap.arena_allocator.ArenaAllocator.free+0x13e>
     8e2:	8b 5c 24 10                      	mov    ebx,DWORD PTR [esp+0x10]
     8e6:	89 d9                            	mov    ecx,ebx
     8e8:	e8 9c 0c 00 00                   	call   1589 <heap.arena_allocator.ArenaAllocator.free+0x149>
     8ed:	8b 44 24 14                      	mov    eax,DWORD PTR [esp+0x14]
     8f1:	89 03                            	mov    DWORD PTR [ebx],eax
     8f3:	89 f0                            	mov    eax,esi
     8f5:	31 c9                            	xor    ecx,ecx
     8f7:	8b 54 24 24                      	mov    edx,DWORD PTR [esp+0x24]
     8fb:	29 c2                            	sub    edx,eax
     8fd:	72 04                            	jb     903 <fmt.formatBuf__anon_7329+0x253>
     8ff:	89 d0                            	mov    eax,edx
     901:	89 d1                            	mov    ecx,edx
     903:	89 4c 24 24                      	mov    DWORD PTR [esp+0x24],ecx
     907:	8b 6c 24 10                      	mov    ebp,DWORD PTR [esp+0x10]
     90b:	8b 4c 24 68                      	mov    ecx,DWORD PTR [esp+0x68]
     90f:	8b 44 24 64                      	mov    eax,DWORD PTR [esp+0x64]
     913:	0f 87 cb 00 00 00                	ja     9e4 <fmt.formatBuf__anon_7329+0x334>
     919:	8b 01                            	mov    eax,DWORD PTR [ecx]
     91b:	89 44 24 14                      	mov    DWORD PTR [esp+0x14],eax
     91f:	31 ed                            	xor    ebp,ebp
     921:	90                               	nop
     922:	90                               	nop
     923:	90                               	nop
     924:	90                               	nop
     925:	90                               	nop
     926:	90                               	nop
     927:	90                               	nop
     928:	90                               	nop
     929:	90                               	nop
     92a:	90                               	nop
     92b:	90                               	nop
     92c:	90                               	nop
     92d:	90                               	nop
     92e:	90                               	nop
     92f:	90                               	nop
     930:	39 f5                            	cmp    ebp,esi
     932:	0f 87 0e 03 00 00                	ja     c46 <fmt.formatBuf__anon_7329+0x596>
     938:	8d 04 2f                         	lea    eax,[edi+ebp*1]
     93b:	89 f1                            	mov    ecx,esi
     93d:	29 e9                            	sub    ecx,ebp
     93f:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
     943:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
     947:	8b 44 24 14                      	mov    eax,DWORD PTR [esp+0x14]
     94b:	89 04 24                         	mov    DWORD PTR [esp],eax
     94e:	8d 4c 24 18                      	lea    ecx,[esp+0x18]
     952:	8b 54 24 10                      	mov    edx,DWORD PTR [esp+0x10]
     956:	e8 65 fc ff ff                   	call   5c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write>
     95b:	0f b7 5c 24 1c                   	movzx  ebx,WORD PTR [esp+0x1c]
     960:	66 85 db                         	test   bx,bx
     963:	0f 85 95 02 00 00                	jne    bfe <fmt.formatBuf__anon_7329+0x54e>
     969:	03 6c 24 18                      	add    ebp,DWORD PTR [esp+0x18]
     96d:	0f 82 a5 02 00 00                	jb     c18 <fmt.formatBuf__anon_7329+0x568>
     973:	39 f5                            	cmp    ebp,esi
     975:	75 b9                            	jne    930 <fmt.formatBuf__anon_7329+0x280>
     977:	e9 76 02 00 00                   	jmp    bf2 <fmt.formatBuf__anon_7329+0x542>
     97c:	85 f6                            	test   esi,esi
     97e:	0f 84 6e 02 00 00                	je     bf2 <fmt.formatBuf__anon_7329+0x542>
     984:	8b 01                            	mov    eax,DWORD PTR [ecx]
     986:	89 44 24 14                      	mov    DWORD PTR [esp+0x14],eax
     98a:	31 ed                            	xor    ebp,ebp
     98c:	90                               	nop
     98d:	90                               	nop
     98e:	90                               	nop
     98f:	90                               	nop
     990:	39 f5                            	cmp    ebp,esi
     992:	0f 87 ae 02 00 00                	ja     c46 <fmt.formatBuf__anon_7329+0x596>
     998:	8d 04 2f                         	lea    eax,[edi+ebp*1]
     99b:	89 f1                            	mov    ecx,esi
     99d:	29 e9                            	sub    ecx,ebp
     99f:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
     9a3:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
     9a7:	8b 44 24 14                      	mov    eax,DWORD PTR [esp+0x14]
     9ab:	89 04 24                         	mov    DWORD PTR [esp],eax
     9ae:	8d 4c 24 18                      	lea    ecx,[esp+0x18]
     9b2:	8b 54 24 10                      	mov    edx,DWORD PTR [esp+0x10]
     9b6:	e8 05 fc ff ff                   	call   5c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write>
     9bb:	0f b7 5c 24 1c                   	movzx  ebx,WORD PTR [esp+0x1c]
     9c0:	66 85 db                         	test   bx,bx
     9c3:	0f 85 35 02 00 00                	jne    bfe <fmt.formatBuf__anon_7329+0x54e>
     9c9:	03 6c 24 18                      	add    ebp,DWORD PTR [esp+0x18]
     9cd:	0f 82 45 02 00 00                	jb     c18 <fmt.formatBuf__anon_7329+0x568>
     9d3:	39 f5                            	cmp    ebp,esi
     9d5:	75 b9                            	jne    990 <fmt.formatBuf__anon_7329+0x2e0>
     9d7:	e9 16 02 00 00                   	jmp    bf2 <fmt.formatBuf__anon_7329+0x542>
     9dc:	85 d2                            	test   edx,edx
     9de:	0f 84 0e 02 00 00                	je     bf2 <fmt.formatBuf__anon_7329+0x542>
     9e4:	0f b6 40 10                      	movzx  eax,BYTE PTR [eax+0x10]
     9e8:	85 c0                            	test   eax,eax
     9ea:	0f 84 ac 00 00 00                	je     a9c <fmt.formatBuf__anon_7329+0x3ec>
     9f0:	83 f8 01                         	cmp    eax,0x1
     9f3:	0f 84 38 01 00 00                	je     b31 <fmt.formatBuf__anon_7329+0x481>
     9f9:	83 f8 02                         	cmp    eax,0x2
     9fc:	0f 85 72 02 00 00                	jne    c74 <fmt.formatBuf__anon_7329+0x5c4>
     a02:	8b 01                            	mov    eax,DWORD PTR [ecx]
     a04:	89 44 24 40                      	mov    DWORD PTR [esp+0x40],eax
     a08:	8b 44 24 64                      	mov    eax,DWORD PTR [esp+0x64]
     a0c:	0f b6 40 11                      	movzx  eax,BYTE PTR [eax+0x11]
     a10:	8b 4c 24 24                      	mov    ecx,DWORD PTR [esp+0x24]
     a14:	89 4c 24 04                      	mov    DWORD PTR [esp+0x4],ecx
     a18:	89 04 24                         	mov    DWORD PTR [esp],eax
     a1b:	8d 54 24 40                      	lea    edx,[esp+0x40]
     a1f:	89 e9                            	mov    ecx,ebp
     a21:	e8 9a f9 ff ff                   	call   3c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes>
     a26:	66 85 c0                         	test   ax,ax
     a29:	0f 85 de 01 00 00                	jne    c0d <fmt.formatBuf__anon_7329+0x55d>
     a2f:	85 f6                            	test   esi,esi
     a31:	0f 84 bb 01 00 00                	je     bf2 <fmt.formatBuf__anon_7329+0x542>
     a37:	8b 44 24 68                      	mov    eax,DWORD PTR [esp+0x68]
     a3b:	8b 00                            	mov    eax,DWORD PTR [eax]
     a3d:	89 44 24 14                      	mov    DWORD PTR [esp+0x14],eax
     a41:	31 ed                            	xor    ebp,ebp
     a43:	90                               	nop
     a44:	90                               	nop
     a45:	90                               	nop
     a46:	90                               	nop
     a47:	90                               	nop
     a48:	90                               	nop
     a49:	90                               	nop
     a4a:	90                               	nop
     a4b:	90                               	nop
     a4c:	90                               	nop
     a4d:	90                               	nop
     a4e:	90                               	nop
     a4f:	90                               	nop
     a50:	39 f5                            	cmp    ebp,esi
     a52:	0f 87 ee 01 00 00                	ja     c46 <fmt.formatBuf__anon_7329+0x596>
     a58:	8d 04 2f                         	lea    eax,[edi+ebp*1]
     a5b:	89 f1                            	mov    ecx,esi
     a5d:	29 e9                            	sub    ecx,ebp
     a5f:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
     a63:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
     a67:	8b 44 24 14                      	mov    eax,DWORD PTR [esp+0x14]
     a6b:	89 04 24                         	mov    DWORD PTR [esp],eax
     a6e:	8d 4c 24 18                      	lea    ecx,[esp+0x18]
     a72:	8b 54 24 10                      	mov    edx,DWORD PTR [esp+0x10]
     a76:	e8 45 fb ff ff                   	call   5c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write>
     a7b:	0f b7 5c 24 1c                   	movzx  ebx,WORD PTR [esp+0x1c]
     a80:	66 85 db                         	test   bx,bx
     a83:	0f 85 75 01 00 00                	jne    bfe <fmt.formatBuf__anon_7329+0x54e>
     a89:	03 6c 24 18                      	add    ebp,DWORD PTR [esp+0x18]
     a8d:	0f 82 85 01 00 00                	jb     c18 <fmt.formatBuf__anon_7329+0x568>
     a93:	39 f5                            	cmp    ebp,esi
     a95:	75 b9                            	jne    a50 <fmt.formatBuf__anon_7329+0x3a0>
     a97:	e9 56 01 00 00                   	jmp    bf2 <fmt.formatBuf__anon_7329+0x542>
     a9c:	8b 11                            	mov    edx,DWORD PTR [ecx]
     a9e:	85 f6                            	test   esi,esi
     aa0:	74 5f                            	je     b01 <fmt.formatBuf__anon_7329+0x451>
     aa2:	31 ed                            	xor    ebp,ebp
     aa4:	89 54 24 14                      	mov    DWORD PTR [esp+0x14],edx
     aa8:	90                               	nop
     aa9:	90                               	nop
     aaa:	90                               	nop
     aab:	90                               	nop
     aac:	90                               	nop
     aad:	90                               	nop
     aae:	90                               	nop
     aaf:	90                               	nop
     ab0:	39 f5                            	cmp    ebp,esi
     ab2:	0f 87 8e 01 00 00                	ja     c46 <fmt.formatBuf__anon_7329+0x596>
     ab8:	8d 04 2f                         	lea    eax,[edi+ebp*1]
     abb:	89 f1                            	mov    ecx,esi
     abd:	29 e9                            	sub    ecx,ebp
     abf:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
     ac3:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
     ac7:	89 14 24                         	mov    DWORD PTR [esp],edx
     aca:	8d 4c 24 18                      	lea    ecx,[esp+0x18]
     ace:	8b 54 24 10                      	mov    edx,DWORD PTR [esp+0x10]
     ad2:	e8 e9 fa ff ff                   	call   5c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write>
     ad7:	0f b7 5c 24 1c                   	movzx  ebx,WORD PTR [esp+0x1c]
     adc:	66 85 db                         	test   bx,bx
     adf:	0f 85 19 01 00 00                	jne    bfe <fmt.formatBuf__anon_7329+0x54e>
     ae5:	03 6c 24 18                      	add    ebp,DWORD PTR [esp+0x18]
     ae9:	8b 44 24 68                      	mov    eax,DWORD PTR [esp+0x68]
     aed:	0f 82 25 01 00 00                	jb     c18 <fmt.formatBuf__anon_7329+0x568>
     af3:	39 f5                            	cmp    ebp,esi
     af5:	8b 54 24 14                      	mov    edx,DWORD PTR [esp+0x14]
     af9:	75 b5                            	jne    ab0 <fmt.formatBuf__anon_7329+0x400>
     afb:	8b 10                            	mov    edx,DWORD PTR [eax]
     afd:	8b 6c 24 10                      	mov    ebp,DWORD PTR [esp+0x10]
     b01:	89 54 24 28                      	mov    DWORD PTR [esp+0x28],edx
     b05:	8b 44 24 64                      	mov    eax,DWORD PTR [esp+0x64]
     b09:	0f b6 40 11                      	movzx  eax,BYTE PTR [eax+0x11]
     b0d:	8b 4c 24 24                      	mov    ecx,DWORD PTR [esp+0x24]
     b11:	89 4c 24 04                      	mov    DWORD PTR [esp+0x4],ecx
     b15:	89 04 24                         	mov    DWORD PTR [esp],eax
     b18:	8d 54 24 28                      	lea    edx,[esp+0x28]
     b1c:	89 e9                            	mov    ecx,ebp
     b1e:	e8 9d f8 ff ff                   	call   3c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes>
     b23:	66 85 c0                         	test   ax,ax
     b26:	0f 84 c6 00 00 00                	je     bf2 <fmt.formatBuf__anon_7329+0x542>
     b2c:	e9 dc 00 00 00                   	jmp    c0d <fmt.formatBuf__anon_7329+0x55d>
     b31:	8b 44 24 24                      	mov    eax,DWORD PTR [esp+0x24]
     b35:	89 c2                            	mov    edx,eax
     b37:	42                               	inc    edx
     b38:	89 54 24 48                      	mov    DWORD PTR [esp+0x48],edx
     b3c:	0f 84 d6 00 00 00                	je     c18 <fmt.formatBuf__anon_7329+0x568>
     b42:	d1 e8                            	shr    eax,1
     b44:	89 c2                            	mov    edx,eax
     b46:	8b 01                            	mov    eax,DWORD PTR [ecx]
     b48:	89 44 24 30                      	mov    DWORD PTR [esp+0x30],eax
     b4c:	8b 44 24 64                      	mov    eax,DWORD PTR [esp+0x64]
     b50:	0f b6 40 11                      	movzx  eax,BYTE PTR [eax+0x11]
     b54:	89 54 24 04                      	mov    DWORD PTR [esp+0x4],edx
     b58:	89 04 24                         	mov    DWORD PTR [esp],eax
     b5b:	8d 54 24 30                      	lea    edx,[esp+0x30]
     b5f:	89 e9                            	mov    ecx,ebp
     b61:	e8 5a f8 ff ff                   	call   3c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes>
     b66:	66 85 c0                         	test   ax,ax
     b69:	0f 85 9e 00 00 00                	jne    c0d <fmt.formatBuf__anon_7329+0x55d>
     b6f:	8b 44 24 68                      	mov    eax,DWORD PTR [esp+0x68]
     b73:	8b 10                            	mov    edx,DWORD PTR [eax]
     b75:	85 f6                            	test   esi,esi
     b77:	74 50                            	je     bc9 <fmt.formatBuf__anon_7329+0x519>
     b79:	31 ed                            	xor    ebp,ebp
     b7b:	89 54 24 14                      	mov    DWORD PTR [esp+0x14],edx
     b7f:	90                               	nop
     b80:	39 f5                            	cmp    ebp,esi
     b82:	0f 87 be 00 00 00                	ja     c46 <fmt.formatBuf__anon_7329+0x596>
     b88:	8d 04 2f                         	lea    eax,[edi+ebp*1]
     b8b:	89 f1                            	mov    ecx,esi
     b8d:	29 e9                            	sub    ecx,ebp
     b8f:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
     b93:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
     b97:	89 14 24                         	mov    DWORD PTR [esp],edx
     b9a:	8d 4c 24 18                      	lea    ecx,[esp+0x18]
     b9e:	8b 54 24 10                      	mov    edx,DWORD PTR [esp+0x10]
     ba2:	e8 19 fa ff ff                   	call   5c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).write>
     ba7:	0f b7 5c 24 1c                   	movzx  ebx,WORD PTR [esp+0x1c]
     bac:	66 85 db                         	test   bx,bx
     baf:	75 4d                            	jne    bfe <fmt.formatBuf__anon_7329+0x54e>
     bb1:	03 6c 24 18                      	add    ebp,DWORD PTR [esp+0x18]
     bb5:	8b 44 24 68                      	mov    eax,DWORD PTR [esp+0x68]
     bb9:	72 5d                            	jb     c18 <fmt.formatBuf__anon_7329+0x568>
     bbb:	39 f5                            	cmp    ebp,esi
     bbd:	8b 54 24 14                      	mov    edx,DWORD PTR [esp+0x14]
     bc1:	75 bd                            	jne    b80 <fmt.formatBuf__anon_7329+0x4d0>
     bc3:	8b 10                            	mov    edx,DWORD PTR [eax]
     bc5:	8b 6c 24 10                      	mov    ebp,DWORD PTR [esp+0x10]
     bc9:	8b 4c 24 48                      	mov    ecx,DWORD PTR [esp+0x48]
     bcd:	d1 e9                            	shr    ecx,1
     bcf:	89 54 24 38                      	mov    DWORD PTR [esp+0x38],edx
     bd3:	8b 44 24 64                      	mov    eax,DWORD PTR [esp+0x64]
     bd7:	0f b6 40 11                      	movzx  eax,BYTE PTR [eax+0x11]
     bdb:	89 4c 24 04                      	mov    DWORD PTR [esp+0x4],ecx
     bdf:	89 04 24                         	mov    DWORD PTR [esp],eax
     be2:	8d 54 24 38                      	lea    edx,[esp+0x38]
     be6:	89 e9                            	mov    ecx,ebp
     be8:	e8 d3 f7 ff ff                   	call   3c0 <io.writer.Writer(fs.file.File,error{DiskQuota,FileTooBig,InputOutput,NoSpaceLeft,DeviceBusy,InvalidArgument,AccessDenied,BrokenPipe,SystemResources,OperationAborted,NotOpenForWriting,LockViolation,WouldBlock,ConnectionResetByPeer,Unexpected},(function 'write')).writeByteNTimes>
     bed:	66 85 c0                         	test   ax,ax
     bf0:	75 1b                            	jne    c0d <fmt.formatBuf__anon_7329+0x55d>
     bf2:	31 db                            	xor    ebx,ebx
     bf4:	89 d8                            	mov    eax,ebx
     bf6:	83 c4 4c                         	add    esp,0x4c
     bf9:	5e                               	pop    esi
     bfa:	5f                               	pop    edi
     bfb:	5b                               	pop    ebx
     bfc:	5d                               	pop    ebp
     bfd:	c3                               	ret
     bfe:	8b 74 24 10                      	mov    esi,DWORD PTR [esp+0x10]
     c02:	89 f1                            	mov    ecx,esi
     c04:	e8 9c 0c 00 00                   	call   18a5 <heap.arena_allocator.ArenaAllocator.free+0x465>
     c09:	89 f1                            	mov    ecx,esi
     c0b:	eb 04                            	jmp    c11 <fmt.formatBuf__anon_7329+0x561>
     c0d:	89 c3                            	mov    ebx,eax
     c0f:	89 e9                            	mov    ecx,ebp
     c11:	e8 9c 0c 00 00                   	call   18b2 <heap.arena_allocator.ArenaAllocator.free+0x472>
     c16:	eb dc                            	jmp    bf4 <fmt.formatBuf__anon_7329+0x544>
     c18:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     c20:	b9 25 00 00 00                   	mov    ecx,0x25
     c25:	ba 10 00 00 00                   	mov    edx,0x10
     c2a:	e8 fc ff ff ff                   	call   c2b <fmt.formatBuf__anon_7329+0x57b>
     c2f:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     c37:	b9 66 00 00 00                   	mov    ecx,0x66
     c3c:	ba 13 00 00 00                   	mov    edx,0x13
     c41:	e8 fc ff ff ff                   	call   c42 <fmt.formatBuf__anon_7329+0x592>
     c46:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     c4e:	b9 00 00 00 00                   	mov    ecx,0x0
     c53:	ba 24 00 00 00                   	mov    edx,0x24
     c58:	e8 fc ff ff ff                   	call   c59 <fmt.formatBuf__anon_7329+0x5a9>
     c5d:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     c65:	b9 e1 00 00 00                   	mov    ecx,0xe1
     c6a:	ba 18 00 00 00                   	mov    edx,0x18
     c6f:	e8 fc ff ff ff                   	call   c70 <fmt.formatBuf__anon_7329+0x5c0>
     c74:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     c7c:	b9 c9 00 00 00                   	mov    ecx,0xc9
     c81:	ba 17 00 00 00                   	mov    edx,0x17
     c86:	e8 fc ff ff ff                   	call   c87 <fmt.formatBuf__anon_7329+0x5d7>
     c8b:	90                               	nop
     c8c:	90                               	nop
     c8d:	90                               	nop
     c8e:	90                               	nop
     c8f:	90                               	nop

00000c90 <os.linux.exit_group>:
     c90:	53                               	push   ebx
     c91:	83 ec 08                         	sub    esp,0x8
     c94:	b8 fc 00 00 00                   	mov    eax,0xfc
     c99:	bb 7f 00 00 00                   	mov    ebx,0x7f
     c9e:	cd 80                            	int    0x80
     ca0:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     ca8:	b9 e1 00 00 00                   	mov    ecx,0xe1
     cad:	ba 18 00 00 00                   	mov    edx,0x18
     cb2:	e8 fc ff ff ff                   	call   cb3 <os.linux.exit_group+0x23>
     cb7:	90                               	nop
     cb8:	90                               	nop
     cb9:	90                               	nop
     cba:	90                               	nop
     cbb:	90                               	nop
     cbc:	90                               	nop
     cbd:	90                               	nop
     cbe:	90                               	nop
     cbf:	90                               	nop

00000cc0 <debug.StackIterator.next_internal>:
     cc0:	55                               	push   ebp
     cc1:	53                               	push   ebx
     cc2:	57                               	push   edi
     cc3:	56                               	push   esi
     cc4:	81 ec 2c 01 00 00                	sub    esp,0x12c
     cca:	89 d7                            	mov    edi,edx
     ccc:	89 ce                            	mov    esi,ecx
     cce:	8d 44 24 2c                      	lea    eax,[esp+0x2c]
     cd2:	89 44 24 14                      	mov    DWORD PTR [esp+0x14],eax
     cd6:	c7 44 24 18 20 00 00 00          	mov    DWORD PTR [esp+0x18],0x20
     cde:	c7 44 24 10 00 00 00 00          	mov    DWORD PTR [esp+0x10],0x0
     ce6:	80 ba a4 00 00 00 00             	cmp    BYTE PTR [edx+0xa4],0x0
     ced:	74 09                            	je     cf8 <debug.StackIterator.next_internal+0x38>
     cef:	80 bf a2 00 00 00 00             	cmp    BYTE PTR [edi+0xa2],0x0
     cf6:	74 4f                            	je     d47 <debug.StackIterator.next_internal+0x87>
     cf8:	8b 4f 08                         	mov    ecx,DWORD PTR [edi+0x8]
     cfb:	85 c9                            	test   ecx,ecx
     cfd:	74 4e                            	je     d4d <debug.StackIterator.next_internal+0x8d>
     cff:	f6 c1 03                         	test   cl,0x3
     d02:	75 49                            	jne    d4d <debug.StackIterator.next_internal+0x8d>
     d04:	8d 84 24 ac 00 00 00             	lea    eax,[esp+0xac]
     d0b:	89 44 24 24                      	mov    DWORD PTR [esp+0x24],eax
     d0f:	c7 44 24 28 20 00 00 00          	mov    DWORD PTR [esp+0x28],0x20
     d17:	c7 44 24 20 00 00 00 00          	mov    DWORD PTR [esp+0x20],0x0
     d1f:	89 cb                            	mov    ebx,ecx
     d21:	81 e3 00 f0 ff ff                	and    ebx,0xfffff000
     d27:	74 24                            	je     d4d <debug.StackIterator.next_internal+0x8d>
     d29:	89 cd                            	mov    ebp,ecx
     d2b:	b8 90 00 00 00                   	mov    eax,0x90
     d30:	b9 00 10 00 00                   	mov    ecx,0x1000
     d35:	ba 01 00 00 00                   	mov    edx,0x1
     d3a:	cd 80                            	int    0x80
     d3c:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
     d41:	73 22                            	jae    d65 <debug.StackIterator.next_internal+0xa5>
     d43:	31 c0                            	xor    eax,eax
     d45:	eb 20                            	jmp    d67 <debug.StackIterator.next_internal+0xa7>
     d47:	83 7f 20 00                      	cmp    DWORD PTR [edi+0x20],0x0
     d4b:	75 66                            	jne    db3 <debug.StackIterator.next_internal+0xf3>
     d4d:	c7 46 04 00 00 00 00             	mov    DWORD PTR [esi+0x4],0x0
     d54:	c7 06 00 00 00 00                	mov    DWORD PTR [esi],0x0
     d5a:	81 c4 2c 01 00 00                	add    esp,0x12c
     d60:	5e                               	pop    esi
     d61:	5f                               	pop    edi
     d62:	5b                               	pop    ebx
     d63:	5d                               	pop    ebp
     d64:	c3                               	ret
     d65:	f7 d8                            	neg    eax
     d67:	66 85 c0                         	test   ax,ax
     d6a:	75 29                            	jne    d95 <debug.StackIterator.next_internal+0xd5>
     d6c:	89 e9                            	mov    ecx,ebp
     d6e:	f6 c1 03                         	test   cl,0x3
     d71:	75 71                            	jne    de4 <debug.StackIterator.next_internal+0x124>
     d73:	8b 01                            	mov    eax,DWORD PTR [ecx]
     d75:	85 c0                            	test   eax,eax
     d77:	74 05                            	je     d7e <debug.StackIterator.next_internal+0xbe>
     d79:	3b 47 08                         	cmp    eax,DWORD PTR [edi+0x8]
     d7c:	72 cf                            	jb     d4d <debug.StackIterator.next_internal+0x8d>
     d7e:	83 c1 04                         	add    ecx,0x4
     d81:	72 25                            	jb     da8 <debug.StackIterator.next_internal+0xe8>
     d83:	f6 c1 03                         	test   cl,0x3
     d86:	75 5c                            	jne    de4 <debug.StackIterator.next_internal+0x124>
     d88:	8b 09                            	mov    ecx,DWORD PTR [ecx]
     d8a:	89 47 08                         	mov    DWORD PTR [edi+0x8],eax
     d8d:	89 0e                            	mov    DWORD PTR [esi],ecx
     d8f:	c6 46 04 01                      	mov    BYTE PTR [esi+0x4],0x1
     d93:	eb c5                            	jmp    d5a <debug.StackIterator.next_internal+0x9a>
     d95:	0f b7 c0                         	movzx  eax,ax
     d98:	83 f8 0c                         	cmp    eax,0xc
     d9b:	75 2d                            	jne    dca <debug.StackIterator.next_internal+0x10a>
     d9d:	8d 4c 24 20                      	lea    ecx,[esp+0x20]
     da1:	e8 9c 0c 00 00                   	call   1a42 <heap.arena_allocator.ArenaAllocator.free+0x602>
     da6:	eb a5                            	jmp    d4d <debug.StackIterator.next_internal+0x8d>
     da8:	8d 4c 24 10                      	lea    ecx,[esp+0x10]
     dac:	e8 9c 0c 00 00                   	call   1a4d <heap.arena_allocator.ArenaAllocator.free+0x60d>
     db1:	eb 9a                            	jmp    d4d <debug.StackIterator.next_internal+0x8d>
     db3:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     dbb:	b9 25 00 00 00                   	mov    ecx,0x25
     dc0:	ba 10 00 00 00                   	mov    edx,0x10
     dc5:	e8 fc ff ff ff                   	call   dc6 <debug.StackIterator.next_internal+0x106>
     dca:	83 f8 16                         	cmp    eax,0x16
     dcd:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     dd5:	b9 e1 00 00 00                   	mov    ecx,0xe1
     dda:	ba 18 00 00 00                   	mov    edx,0x18
     ddf:	e8 fc ff ff ff                   	call   de0 <debug.StackIterator.next_internal+0x120>
     de4:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     dec:	b9 36 00 00 00                   	mov    ecx,0x36
     df1:	ba 13 00 00 00                   	mov    edx,0x13
     df6:	e8 fc ff ff ff                   	call   df7 <debug.StackIterator.next_internal+0x137>
     dfb:	90                               	nop
     dfc:	90                               	nop
     dfd:	90                               	nop
     dfe:	90                               	nop
     dff:	90                               	nop

00000e00 <os.linux.x86.restore_rt>:
     e00:	b8 ad 00 00 00                   	mov    eax,0xad
     e05:	cd 80                            	int    0x80
     e07:	0f 0b                            	ud2
     e09:	90                               	nop
     e0a:	90                               	nop
     e0b:	90                               	nop
     e0c:	90                               	nop
     e0d:	90                               	nop
     e0e:	90                               	nop
     e0f:	90                               	nop

00000e10 <os.linux.x86.restore>:
     e10:	b8 77 00 00 00                   	mov    eax,0x77
     e15:	cd 80                            	int    0x80
     e17:	0f 0b                            	ud2
     e19:	90                               	nop
     e1a:	90                               	nop
     e1b:	90                               	nop
     e1c:	90                               	nop
     e1d:	90                               	nop
     e1e:	90                               	nop
     e1f:	90                               	nop

00000e20 <heap.PageAllocator.alloc>:
     e20:	53                               	push   ebx
     e21:	57                               	push   edi
     e22:	56                               	push   esi
     e23:	81 ec c0 00 00 00                	sub    esp,0xc0
     e29:	8d 44 24 40                      	lea    eax,[esp+0x40]
     e2d:	89 44 24 24                      	mov    DWORD PTR [esp+0x24],eax
     e31:	c7 44 24 28 20 00 00 00          	mov    DWORD PTR [esp+0x28],0x20
     e39:	c7 44 24 20 00 00 00 00          	mov    DWORD PTR [esp+0x20],0x0
     e41:	85 d2                            	test   edx,edx
     e43:	74 7e                            	je     ec3 <heap.PageAllocator.alloc+0xa3>
     e45:	89 d6                            	mov    esi,edx
     e47:	31 ff                            	xor    edi,edi
     e49:	81 fa 01 f0 ff ff                	cmp    edx,0xfffff001
     e4f:	73 66                            	jae    eb7 <heap.PageAllocator.alloc+0x97>
     e51:	81 c6 ff 0f 00 00                	add    esi,0xfff
     e57:	81 e6 00 f0 ff ff                	and    esi,0xfffff000
     e5d:	8b 1d 48 00 00 00                	mov    ebx,DWORD PTR ds:0x48
     e63:	89 74 24 04                      	mov    DWORD PTR [esp+0x4],esi
     e67:	89 1c 24                         	mov    DWORD PTR [esp],ebx
     e6a:	c7 44 24 10 ff ff ff ff          	mov    DWORD PTR [esp+0x10],0xffffffff
     e72:	c7 44 24 0c 22 00 00 00          	mov    DWORD PTR [esp+0xc],0x22
     e7a:	c7 44 24 08 03 00 00 00          	mov    DWORD PTR [esp+0x8],0x3
     e82:	8d 4c 24 30                      	lea    ecx,[esp+0x30]
     e86:	8d 54 24 20                      	lea    edx,[esp+0x20]
     e8a:	e8 c1 f3 ff ff                   	call   250 <os.mmap>
     e8f:	66 83 7c 24 38 00                	cmp    WORD PTR [esp+0x38],0x0
     e95:	75 20                            	jne    eb7 <heap.PageAllocator.alloc+0x97>
     e97:	8b 7c 24 30                      	mov    edi,DWORD PTR [esp+0x30]
     e9b:	f7 c7 ff 0f 00 00                	test   edi,0xfff
     ea1:	75 20                            	jne    ec3 <heap.PageAllocator.alloc+0xa3>
     ea3:	01 fe                            	add    esi,edi
     ea5:	f7 c6 ff 0f 00 00                	test   esi,0xfff
     eab:	75 2d                            	jne    eda <heap.PageAllocator.alloc+0xba>
     ead:	89 d8                            	mov    eax,ebx
     eaf:	f0 0f b1 35 48 00 00 00          	lock cmpxchg DWORD PTR ds:0x48,esi
     eb7:	89 f8                            	mov    eax,edi
     eb9:	81 c4 c0 00 00 00                	add    esp,0xc0
     ebf:	5e                               	pop    esi
     ec0:	5f                               	pop    edi
     ec1:	5b                               	pop    ebx
     ec2:	c3                               	ret
     ec3:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     ecb:	b9 e1 00 00 00                   	mov    ecx,0xe1
     ed0:	ba 18 00 00 00                   	mov    edx,0x18
     ed5:	e8 fc ff ff ff                   	call   ed6 <heap.PageAllocator.alloc+0xb6>
     eda:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     ee2:	b9 36 00 00 00                   	mov    ecx,0x36
     ee7:	ba 13 00 00 00                   	mov    edx,0x13
     eec:	e8 fc ff ff ff                   	call   eed <heap.PageAllocator.alloc+0xcd>
     ef1:	90                               	nop
     ef2:	90                               	nop
     ef3:	90                               	nop
     ef4:	90                               	nop
     ef5:	90                               	nop
     ef6:	90                               	nop
     ef7:	90                               	nop
     ef8:	90                               	nop
     ef9:	90                               	nop
     efa:	90                               	nop
     efb:	90                               	nop
     efc:	90                               	nop
     efd:	90                               	nop
     efe:	90                               	nop
     eff:	90                               	nop

00000f00 <heap.PageAllocator.resize>:
     f00:	53                               	push   ebx
     f01:	83 ec 08                         	sub    esp,0x8
     f04:	b8 ff 0f 00 00                   	mov    eax,0xfff
     f09:	03 44 24 18                      	add    eax,DWORD PTR [esp+0x18]
     f0d:	72 51                            	jb     f60 <heap.PageAllocator.resize+0x60>
     f0f:	8b 4c 24 10                      	mov    ecx,DWORD PTR [esp+0x10]
     f13:	81 c1 ff 0f 00 00                	add    ecx,0xfff
     f19:	72 45                            	jb     f60 <heap.PageAllocator.resize+0x60>
     f1b:	89 d3                            	mov    ebx,edx
     f1d:	25 00 f0 ff ff                   	and    eax,0xfffff000
     f22:	81 e1 00 f0 ff ff                	and    ecx,0xfffff000
     f28:	b2 01                            	mov    dl,0x1
     f2a:	39 c1                            	cmp    ecx,eax
     f2c:	74 2b                            	je     f59 <heap.PageAllocator.resize+0x59>
     f2e:	29 c1                            	sub    ecx,eax
     f30:	76 1c                            	jbe    f4e <heap.PageAllocator.resize+0x4e>
     f32:	01 c3                            	add    ebx,eax
     f34:	f7 c3 ff 0f 00 00                	test   ebx,0xfff
     f3a:	75 5d                            	jne    f99 <heap.PageAllocator.resize+0x99>
     f3c:	b8 5b 00 00 00                   	mov    eax,0x5b
     f41:	cd 80                            	int    0x80
     f43:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
     f48:	73 08                            	jae    f52 <heap.PageAllocator.resize+0x52>
     f4a:	31 c0                            	xor    eax,eax
     f4c:	eb 06                            	jmp    f54 <heap.PageAllocator.resize+0x54>
     f4e:	31 d2                            	xor    edx,edx
     f50:	eb 07                            	jmp    f59 <heap.PageAllocator.resize+0x59>
     f52:	f7 d8                            	neg    eax
     f54:	66 85 c0                         	test   ax,ax
     f57:	75 1e                            	jne    f77 <heap.PageAllocator.resize+0x77>
     f59:	89 d0                            	mov    eax,edx
     f5b:	83 c4 08                         	add    esp,0x8
     f5e:	5b                               	pop    ebx
     f5f:	c3                               	ret
     f60:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     f68:	b9 25 00 00 00                   	mov    ecx,0x25
     f6d:	ba 10 00 00 00                   	mov    edx,0x10
     f72:	e8 fc ff ff ff                   	call   f73 <heap.PageAllocator.resize+0x73>
     f77:	0f b7 c0                         	movzx  eax,ax
     f7a:	83 f8 0c                         	cmp    eax,0xc
     f7d:	74 03                            	je     f82 <heap.PageAllocator.resize+0x82>
     f7f:	83 f8 16                         	cmp    eax,0x16
     f82:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     f8a:	b9 e1 00 00 00                   	mov    ecx,0xe1
     f8f:	ba 18 00 00 00                   	mov    edx,0x18
     f94:	e8 fc ff ff ff                   	call   f95 <heap.PageAllocator.resize+0x95>
     f99:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
     fa1:	b9 36 00 00 00                   	mov    ecx,0x36
     fa6:	ba 13 00 00 00                   	mov    edx,0x13
     fab:	e8 fc ff ff ff                   	call   fac <heap.PageAllocator.resize+0xac>

00000fb0 <heap.PageAllocator.free>:
     fb0:	53                               	push   ebx
     fb1:	83 ec 08                         	sub    esp,0x8
     fb4:	b9 ff 0f 00 00                   	mov    ecx,0xfff
     fb9:	03 4c 24 10                      	add    ecx,DWORD PTR [esp+0x10]
     fbd:	72 54                            	jb     1013 <heap.PageAllocator.free+0x63>
     fbf:	81 e1 00 f0 ff ff                	and    ecx,0xfffff000
     fc5:	f7 c2 ff 0f 00 00                	test   edx,0xfff
     fcb:	74 04                            	je     fd1 <heap.PageAllocator.free+0x21>
     fcd:	85 c9                            	test   ecx,ecx
     fcf:	75 59                            	jne    102a <heap.PageAllocator.free+0x7a>
     fd1:	b8 5b 00 00 00                   	mov    eax,0x5b
     fd6:	89 d3                            	mov    ebx,edx
     fd8:	cd 80                            	int    0x80
     fda:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
     fdf:	73 04                            	jae    fe5 <heap.PageAllocator.free+0x35>
     fe1:	31 c0                            	xor    eax,eax
     fe3:	eb 02                            	jmp    fe7 <heap.PageAllocator.free+0x37>
     fe5:	f7 d8                            	neg    eax
     fe7:	66 85 c0                         	test   ax,ax
     fea:	75 05                            	jne    ff1 <heap.PageAllocator.free+0x41>
     fec:	83 c4 08                         	add    esp,0x8
     fef:	5b                               	pop    ebx
     ff0:	c3                               	ret
     ff1:	0f b7 c0                         	movzx  eax,ax
     ff4:	83 f8 0c                         	cmp    eax,0xc
     ff7:	74 03                            	je     ffc <heap.PageAllocator.free+0x4c>
     ff9:	83 f8 16                         	cmp    eax,0x16
     ffc:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1004:	b9 e1 00 00 00                   	mov    ecx,0xe1
    1009:	ba 18 00 00 00                   	mov    edx,0x18
    100e:	e8 fc ff ff ff                   	call   100f <heap.PageAllocator.free+0x5f>
    1013:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    101b:	b9 25 00 00 00                   	mov    ecx,0x25
    1020:	ba 10 00 00 00                   	mov    edx,0x10
    1025:	e8 fc ff ff ff                   	call   1026 <heap.PageAllocator.free+0x76>
    102a:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1032:	b9 36 00 00 00                   	mov    ecx,0x36
    1037:	ba 13 00 00 00                   	mov    edx,0x13
    103c:	e8 fc ff ff ff                   	call   103d <heap.PageAllocator.free+0x8d>
    1041:	90                               	nop
    1042:	90                               	nop
    1043:	90                               	nop
    1044:	90                               	nop
    1045:	90                               	nop
    1046:	90                               	nop
    1047:	90                               	nop
    1048:	90                               	nop
    1049:	90                               	nop
    104a:	90                               	nop
    104b:	90                               	nop
    104c:	90                               	nop
    104d:	90                               	nop
    104e:	90                               	nop
    104f:	90                               	nop

00001050 <heap.arena_allocator.ArenaAllocator.alloc>:
    1050:	55                               	push   ebp
    1051:	53                               	push   ebx
    1052:	57                               	push   edi
    1053:	56                               	push   esi
    1054:	83 ec 3c                         	sub    esp,0x3c
    1057:	89 54 24 20                      	mov    DWORD PTR [esp+0x20],edx
    105b:	89 c8                            	mov    eax,ecx
    105d:	a8 03                            	test   al,0x3
    105f:	0f 85 5f 02 00 00                	jne    12c4 <heap.arena_allocator.ArenaAllocator.alloc+0x274>
    1065:	0f b6 4c 24 50                   	movzx  ecx,BYTE PTR [esp+0x50]
    106a:	80 f9 20                         	cmp    cl,0x20
    106d:	0f 83 68 02 00 00                	jae    12db <heap.arena_allocator.ArenaAllocator.alloc+0x28b>
    1073:	ba 01 00 00 00                   	mov    edx,0x1
    1078:	d3 e2                            	shl    edx,cl
    107a:	89 54 24 28                      	mov    DWORD PTR [esp+0x28],edx
    107e:	89 44 24 1c                      	mov    DWORD PTR [esp+0x1c],eax
    1082:	8b 40 08                         	mov    eax,DWORD PTR [eax+0x8]
    1085:	85 c0                            	test   eax,eax
    1087:	75 26                            	jne    10af <heap.arena_allocator.ArenaAllocator.alloc+0x5f>
    1089:	8b 44 24 20                      	mov    eax,DWORD PTR [esp+0x20]
    108d:	03 44 24 28                      	add    eax,DWORD PTR [esp+0x28]
    1091:	0f 82 3f 01 00 00                	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1097:	89 04 24                         	mov    DWORD PTR [esp],eax
    109a:	31 db                            	xor    ebx,ebx
    109c:	8b 4c 24 1c                      	mov    ecx,DWORD PTR [esp+0x1c]
    10a0:	31 d2                            	xor    edx,edx
    10a2:	e8 59 02 00 00                   	call   1300 <heap.arena_allocator.ArenaAllocator.createNode>
    10a7:	85 c0                            	test   eax,eax
    10a9:	0f 84 f4 01 00 00                	je     12a3 <heap.arena_allocator.ArenaAllocator.alloc+0x253>
    10af:	8b 48 04                         	mov    ecx,DWORD PTR [eax+0x4]
    10b2:	83 f9 08                         	cmp    ecx,0x8
    10b5:	8b 7c 24 1c                      	mov    edi,DWORD PTR [esp+0x1c]
    10b9:	0f 82 ee 01 00 00                	jb     12ad <heap.arena_allocator.ArenaAllocator.alloc+0x25d>
    10bf:	89 cd                            	mov    ebp,ecx
    10c1:	8d 48 04                         	lea    ecx,[eax+0x4]
    10c4:	89 4c 24 38                      	mov    DWORD PTR [esp+0x38],ecx
    10c8:	8d 70 08                         	lea    esi,[eax+0x8]
    10cb:	8b 54 24 28                      	mov    edx,DWORD PTR [esp+0x28]
    10cf:	8d 4a ff                         	lea    ecx,[edx-0x1]
    10d2:	89 4c 24 34                      	mov    DWORD PTR [esp+0x34],ecx
    10d6:	89 d1                            	mov    ecx,edx
    10d8:	f7 d9                            	neg    ecx
    10da:	89 4c 24 30                      	mov    DWORD PTR [esp+0x30],ecx
    10de:	03 54 24 20                      	add    edx,DWORD PTR [esp+0x20]
    10e2:	89 54 24 28                      	mov    DWORD PTR [esp+0x28],edx
    10e6:	0f 83 26 01 00 00                	jae    1212 <heap.arena_allocator.ArenaAllocator.alloc+0x1c2>
    10ec:	89 44 24 24                      	mov    DWORD PTR [esp+0x24],eax
    10f0:	8b 5f 0c                         	mov    ebx,DWORD PTR [edi+0xc]
    10f3:	89 f1                            	mov    ecx,esi
    10f5:	01 d9                            	add    ecx,ebx
    10f7:	0f 82 d9 00 00 00                	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    10fd:	89 ca                            	mov    edx,ecx
    10ff:	03 54 24 34                      	add    edx,DWORD PTR [esp+0x34]
    1103:	0f 82 cd 00 00 00                	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1109:	23 54 24 30                      	and    edx,DWORD PTR [esp+0x30]
    110d:	29 ca                            	sub    edx,ecx
    110f:	0f 82 c1 00 00 00                	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1115:	89 74 24 2c                      	mov    DWORD PTR [esp+0x2c],esi
    1119:	01 d3                            	add    ebx,edx
    111b:	0f 82 b5 00 00 00                	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1121:	89 e8                            	mov    eax,ebp
    1123:	89 dd                            	mov    ebp,ebx
    1125:	03 6c 24 20                      	add    ebp,DWORD PTR [esp+0x20]
    1129:	0f 82 a7 00 00 00                	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    112f:	8d 48 f8                         	lea    ecx,[eax-0x8]
    1132:	39 cd                            	cmp    ebp,ecx
    1134:	0f 86 5e 01 00 00                	jbe    1298 <heap.arena_allocator.ArenaAllocator.alloc+0x248>
    113a:	83 c5 08                         	add    ebp,0x8
    113d:	0f 82 93 00 00 00                	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1143:	8b 7c 24 1c                      	mov    edi,DWORD PTR [esp+0x1c]
    1147:	8b 0f                            	mov    ecx,DWORD PTR [edi]
    1149:	8b 5f 04                         	mov    ebx,DWORD PTR [edi+0x4]
    114c:	8b 74 24 4c                      	mov    esi,DWORD PTR [esp+0x4c]
    1150:	89 74 24 0c                      	mov    DWORD PTR [esp+0xc],esi
    1154:	89 6c 24 08                      	mov    DWORD PTR [esp+0x8],ebp
    1158:	89 04 24                         	mov    DWORD PTR [esp],eax
    115b:	c7 44 24 04 02 00 00 00          	mov    DWORD PTR [esp+0x4],0x2
    1163:	8b 54 24 24                      	mov    edx,DWORD PTR [esp+0x24]
    1167:	ff 53 04                         	call   DWORD PTR [ebx+0x4]
    116a:	a8 01                            	test   al,0x1
    116c:	74 68                            	je     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    116e:	89 ea                            	mov    edx,ebp
    1170:	8b 44 24 38                      	mov    eax,DWORD PTR [esp+0x38]
    1174:	89 10                            	mov    DWORD PTR [eax],edx
    1176:	8b 5f 0c                         	mov    ebx,DWORD PTR [edi+0xc]
    1179:	8b 44 24 2c                      	mov    eax,DWORD PTR [esp+0x2c]
    117d:	01 d8                            	add    eax,ebx
    117f:	72 55                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1181:	89 c1                            	mov    ecx,eax
    1183:	03 4c 24 34                      	add    ecx,DWORD PTR [esp+0x34]
    1187:	72 4d                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1189:	23 4c 24 30                      	and    ecx,DWORD PTR [esp+0x30]
    118d:	29 c1                            	sub    ecx,eax
    118f:	72 45                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1191:	01 cb                            	add    ebx,ecx
    1193:	72 41                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1195:	89 dd                            	mov    ebp,ebx
    1197:	03 6c 24 20                      	add    ebp,DWORD PTR [esp+0x20]
    119b:	72 39                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    119d:	8d 42 f8                         	lea    eax,[edx-0x8]
    11a0:	39 c5                            	cmp    ebp,eax
    11a2:	0f 86 f0 00 00 00                	jbe    1298 <heap.arena_allocator.ArenaAllocator.alloc+0x248>
    11a8:	83 c5 08                         	add    ebp,0x8
    11ab:	72 29                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    11ad:	8b 7c 24 1c                      	mov    edi,DWORD PTR [esp+0x1c]
    11b1:	8b 0f                            	mov    ecx,DWORD PTR [edi]
    11b3:	8b 47 04                         	mov    eax,DWORD PTR [edi+0x4]
    11b6:	89 74 24 0c                      	mov    DWORD PTR [esp+0xc],esi
    11ba:	89 6c 24 08                      	mov    DWORD PTR [esp+0x8],ebp
    11be:	89 14 24                         	mov    DWORD PTR [esp],edx
    11c1:	c7 44 24 04 02 00 00 00          	mov    DWORD PTR [esp+0x4],0x2
    11c9:	8b 54 24 24                      	mov    edx,DWORD PTR [esp+0x24]
    11cd:	ff 50 04                         	call   DWORD PTR [eax+0x4]
    11d0:	89 ea                            	mov    edx,ebp
    11d2:	a8 01                            	test   al,0x1
    11d4:	75 9a                            	jne    1170 <heap.arena_allocator.ArenaAllocator.alloc+0x120>
    11d6:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    11de:	b9 25 00 00 00                   	mov    ecx,0x25
    11e3:	ba 10 00 00 00                   	mov    edx,0x10
    11e8:	e8 fc ff ff ff                   	call   11e9 <heap.arena_allocator.ArenaAllocator.alloc+0x199>
    11ed:	90                               	nop
    11ee:	90                               	nop
    11ef:	90                               	nop
    11f0:	8b 44 24 38                      	mov    eax,DWORD PTR [esp+0x38]
    11f4:	89 28                            	mov    DWORD PTR [eax],ebp
    11f6:	8b 44 24 24                      	mov    eax,DWORD PTR [esp+0x24]
    11fa:	8d 48 04                         	lea    ecx,[eax+0x4]
    11fd:	89 4c 24 38                      	mov    DWORD PTR [esp+0x38],ecx
    1201:	8b 48 04                         	mov    ecx,DWORD PTR [eax+0x4]
    1204:	8d 70 08                         	lea    esi,[eax+0x8]
    1207:	89 cd                            	mov    ebp,ecx
    1209:	83 f9 07                         	cmp    ecx,0x7
    120c:	0f 86 9b 00 00 00                	jbe    12ad <heap.arena_allocator.ArenaAllocator.alloc+0x25d>
    1212:	89 44 24 24                      	mov    DWORD PTR [esp+0x24],eax
    1216:	8b 5f 0c                         	mov    ebx,DWORD PTR [edi+0xc]
    1219:	89 f1                            	mov    ecx,esi
    121b:	01 d9                            	add    ecx,ebx
    121d:	72 b7                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    121f:	89 ca                            	mov    edx,ecx
    1221:	03 54 24 34                      	add    edx,DWORD PTR [esp+0x34]
    1225:	72 af                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1227:	23 54 24 30                      	and    edx,DWORD PTR [esp+0x30]
    122b:	29 ca                            	sub    edx,ecx
    122d:	72 a7                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    122f:	89 74 24 2c                      	mov    DWORD PTR [esp+0x2c],esi
    1233:	01 d3                            	add    ebx,edx
    1235:	72 9f                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1237:	89 e8                            	mov    eax,ebp
    1239:	89 dd                            	mov    ebp,ebx
    123b:	03 6c 24 20                      	add    ebp,DWORD PTR [esp+0x20]
    123f:	72 95                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    1241:	8d 70 f8                         	lea    esi,[eax-0x8]
    1244:	39 f5                            	cmp    ebp,esi
    1246:	76 50                            	jbe    1298 <heap.arena_allocator.ArenaAllocator.alloc+0x248>
    1248:	83 c5 08                         	add    ebp,0x8
    124b:	72 89                            	jb     11d6 <heap.arena_allocator.ArenaAllocator.alloc+0x186>
    124d:	8b 7c 24 1c                      	mov    edi,DWORD PTR [esp+0x1c]
    1251:	8b 0f                            	mov    ecx,DWORD PTR [edi]
    1253:	8b 5f 04                         	mov    ebx,DWORD PTR [edi+0x4]
    1256:	8b 54 24 4c                      	mov    edx,DWORD PTR [esp+0x4c]
    125a:	89 54 24 0c                      	mov    DWORD PTR [esp+0xc],edx
    125e:	89 6c 24 08                      	mov    DWORD PTR [esp+0x8],ebp
    1262:	89 04 24                         	mov    DWORD PTR [esp],eax
    1265:	c7 44 24 04 02 00 00 00          	mov    DWORD PTR [esp+0x4],0x2
    126d:	8b 54 24 24                      	mov    edx,DWORD PTR [esp+0x24]
    1271:	ff 53 04                         	call   DWORD PTR [ebx+0x4]
    1274:	a8 01                            	test   al,0x1
    1276:	0f 85 74 ff ff ff                	jne    11f0 <heap.arena_allocator.ArenaAllocator.alloc+0x1a0>
    127c:	8b 44 24 28                      	mov    eax,DWORD PTR [esp+0x28]
    1280:	89 04 24                         	mov    DWORD PTR [esp],eax
    1283:	89 f9                            	mov    ecx,edi
    1285:	89 f2                            	mov    edx,esi
    1287:	e8 74 00 00 00                   	call   1300 <heap.arena_allocator.ArenaAllocator.createNode>
    128c:	85 c0                            	test   eax,eax
    128e:	0f 85 66 ff ff ff                	jne    11fa <heap.arena_allocator.ArenaAllocator.alloc+0x1aa>
    1294:	31 db                            	xor    ebx,ebx
    1296:	eb 0b                            	jmp    12a3 <heap.arena_allocator.ArenaAllocator.alloc+0x253>
    1298:	03 5c 24 2c                      	add    ebx,DWORD PTR [esp+0x2c]
    129c:	8b 44 24 1c                      	mov    eax,DWORD PTR [esp+0x1c]
    12a0:	89 68 0c                         	mov    DWORD PTR [eax+0xc],ebp
    12a3:	89 d8                            	mov    eax,ebx
    12a5:	83 c4 3c                         	add    esp,0x3c
    12a8:	5e                               	pop    esi
    12a9:	5f                               	pop    edi
    12aa:	5b                               	pop    ebx
    12ab:	5d                               	pop    ebp
    12ac:	c3                               	ret
    12ad:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    12b5:	b9 00 00 00 00                   	mov    ecx,0x0
    12ba:	ba 24 00 00 00                   	mov    edx,0x24
    12bf:	e8 fc ff ff ff                   	call   12c0 <heap.arena_allocator.ArenaAllocator.alloc+0x270>
    12c4:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    12cc:	b9 36 00 00 00                   	mov    ecx,0x36
    12d1:	ba 13 00 00 00                   	mov    edx,0x13
    12d6:	e8 fc ff ff ff                   	call   12d7 <heap.arena_allocator.ArenaAllocator.alloc+0x287>
    12db:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    12e3:	b9 4a 00 00 00                   	mov    ecx,0x4a
    12e8:	ba 1b 00 00 00                   	mov    edx,0x1b
    12ed:	e8 fc ff ff ff                   	call   12ee <heap.arena_allocator.ArenaAllocator.alloc+0x29e>
    12f2:	90                               	nop
    12f3:	90                               	nop
    12f4:	90                               	nop
    12f5:	90                               	nop
    12f6:	90                               	nop
    12f7:	90                               	nop
    12f8:	90                               	nop
    12f9:	90                               	nop
    12fa:	90                               	nop
    12fb:	90                               	nop
    12fc:	90                               	nop
    12fd:	90                               	nop
    12fe:	90                               	nop
    12ff:	90                               	nop

00001300 <heap.arena_allocator.ArenaAllocator.createNode>:
    1300:	57                               	push   edi
    1301:	56                               	push   esi
    1302:	83 ec 14                         	sub    esp,0x14
    1305:	8b 44 24 20                      	mov    eax,DWORD PTR [esp+0x20]
    1309:	83 c0 18                         	add    eax,0x18
    130c:	72 4c                            	jb     135a <heap.arena_allocator.ArenaAllocator.createNode+0x5a>
    130e:	01 c2                            	add    edx,eax
    1310:	72 48                            	jb     135a <heap.arena_allocator.ArenaAllocator.createNode+0x5a>
    1312:	89 d7                            	mov    edi,edx
    1314:	d1 ef                            	shr    edi,1
    1316:	01 d7                            	add    edi,edx
    1318:	72 40                            	jb     135a <heap.arena_allocator.ArenaAllocator.createNode+0x5a>
    131a:	89 ce                            	mov    esi,ecx
    131c:	8b 09                            	mov    ecx,DWORD PTR [ecx]
    131e:	8b 46 04                         	mov    eax,DWORD PTR [esi+0x4]
    1321:	8b 54 24 1c                      	mov    edx,DWORD PTR [esp+0x1c]
    1325:	89 54 24 04                      	mov    DWORD PTR [esp+0x4],edx
    1329:	c7 04 24 02 00 00 00             	mov    DWORD PTR [esp],0x2
    1330:	89 fa                            	mov    edx,edi
    1332:	ff 10                            	call   DWORD PTR [eax]
    1334:	85 c0                            	test   eax,eax
    1336:	74 1c                            	je     1354 <heap.arena_allocator.ArenaAllocator.createNode+0x54>
    1338:	a8 03                            	test   al,0x3
    133a:	75 35                            	jne    1371 <heap.arena_allocator.ArenaAllocator.createNode+0x71>
    133c:	89 78 04                         	mov    DWORD PTR [eax+0x4],edi
    133f:	c7 00 00 00 00 00                	mov    DWORD PTR [eax],0x0
    1345:	8b 4e 08                         	mov    ecx,DWORD PTR [esi+0x8]
    1348:	89 08                            	mov    DWORD PTR [eax],ecx
    134a:	89 46 08                         	mov    DWORD PTR [esi+0x8],eax
    134d:	c7 46 0c 00 00 00 00             	mov    DWORD PTR [esi+0xc],0x0
    1354:	83 c4 14                         	add    esp,0x14
    1357:	5e                               	pop    esi
    1358:	5f                               	pop    edi
    1359:	c3                               	ret
    135a:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1362:	b9 25 00 00 00                   	mov    ecx,0x25
    1367:	ba 10 00 00 00                   	mov    edx,0x10
    136c:	e8 fc ff ff ff                   	call   136d <heap.arena_allocator.ArenaAllocator.createNode+0x6d>
    1371:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1379:	b9 36 00 00 00                   	mov    ecx,0x36
    137e:	ba 13 00 00 00                   	mov    edx,0x13
    1383:	e8 fc ff ff ff                   	call   1384 <heap.arena_allocator.ArenaAllocator.createNode+0x84>
    1388:	90                               	nop
    1389:	90                               	nop
    138a:	90                               	nop
    138b:	90                               	nop
    138c:	90                               	nop
    138d:	90                               	nop
    138e:	90                               	nop
    138f:	90                               	nop

00001390 <heap.arena_allocator.ArenaAllocator.resize>:
    1390:	55                               	push   ebp
    1391:	53                               	push   ebx
    1392:	57                               	push   edi
    1393:	56                               	push   esi
    1394:	83 ec 0c                         	sub    esp,0xc
    1397:	f6 c1 03                         	test   cl,0x3
    139a:	75 75                            	jne    1411 <heap.arena_allocator.ArenaAllocator.resize+0x81>
    139c:	8b 69 08                         	mov    ebp,DWORD PTR [ecx+0x8]
    139f:	85 ed                            	test   ebp,ebp
    13a1:	74 37                            	je     13da <heap.arena_allocator.ArenaAllocator.resize+0x4a>
    13a3:	8b 75 04                         	mov    esi,DWORD PTR [ebp+0x4]
    13a6:	83 fe 07                         	cmp    esi,0x7
    13a9:	76 7d                            	jbe    1428 <heap.arena_allocator.ArenaAllocator.resize+0x98>
    13ab:	83 c5 08                         	add    ebp,0x8
    13ae:	8b 41 0c                         	mov    eax,DWORD PTR [ecx+0xc]
    13b1:	01 c5                            	add    ebp,eax
    13b3:	72 45                            	jb     13fa <heap.arena_allocator.ArenaAllocator.resize+0x6a>
    13b5:	8b 5c 24 20                      	mov    ebx,DWORD PTR [esp+0x20]
    13b9:	01 da                            	add    edx,ebx
    13bb:	72 3d                            	jb     13fa <heap.arena_allocator.ArenaAllocator.resize+0x6a>
    13bd:	8b 7c 24 28                      	mov    edi,DWORD PTR [esp+0x28]
    13c1:	39 d5                            	cmp    ebp,edx
    13c3:	75 19                            	jne    13de <heap.arena_allocator.ArenaAllocator.resize+0x4e>
    13c5:	89 da                            	mov    edx,ebx
    13c7:	29 fa                            	sub    edx,edi
    13c9:	73 1a                            	jae    13e5 <heap.arena_allocator.ArenaAllocator.resize+0x55>
    13cb:	83 c6 f8                         	add    esi,0xfffffff8
    13ce:	29 c6                            	sub    esi,eax
    13d0:	72 28                            	jb     13fa <heap.arena_allocator.ArenaAllocator.resize+0x6a>
    13d2:	29 df                            	sub    edi,ebx
    13d4:	72 24                            	jb     13fa <heap.arena_allocator.ArenaAllocator.resize+0x6a>
    13d6:	39 fe                            	cmp    esi,edi
    13d8:	73 1c                            	jae    13f6 <heap.arena_allocator.ArenaAllocator.resize+0x66>
    13da:	31 c0                            	xor    eax,eax
    13dc:	eb 10                            	jmp    13ee <heap.arena_allocator.ArenaAllocator.resize+0x5e>
    13de:	39 fb                            	cmp    ebx,edi
    13e0:	0f 93 c0                         	setae  al
    13e3:	eb 09                            	jmp    13ee <heap.arena_allocator.ArenaAllocator.resize+0x5e>
    13e5:	29 d0                            	sub    eax,edx
    13e7:	72 11                            	jb     13fa <heap.arena_allocator.ArenaAllocator.resize+0x6a>
    13e9:	89 41 0c                         	mov    DWORD PTR [ecx+0xc],eax
    13ec:	b0 01                            	mov    al,0x1
    13ee:	83 c4 0c                         	add    esp,0xc
    13f1:	5e                               	pop    esi
    13f2:	5f                               	pop    edi
    13f3:	5b                               	pop    ebx
    13f4:	5d                               	pop    ebp
    13f5:	c3                               	ret
    13f6:	01 f8                            	add    eax,edi
    13f8:	73 ef                            	jae    13e9 <heap.arena_allocator.ArenaAllocator.resize+0x59>
    13fa:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1402:	b9 25 00 00 00                   	mov    ecx,0x25
    1407:	ba 10 00 00 00                   	mov    edx,0x10
    140c:	e8 fc ff ff ff                   	call   140d <heap.arena_allocator.ArenaAllocator.resize+0x7d>
    1411:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1419:	b9 36 00 00 00                   	mov    ecx,0x36
    141e:	ba 13 00 00 00                   	mov    edx,0x13
    1423:	e8 fc ff ff ff                   	call   1424 <heap.arena_allocator.ArenaAllocator.resize+0x94>
    1428:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1430:	b9 00 00 00 00                   	mov    ecx,0x0
    1435:	ba 24 00 00 00                   	mov    edx,0x24
    143a:	e8 fc ff ff ff                   	call   143b <heap.arena_allocator.ArenaAllocator.resize+0xab>
    143f:	90                               	nop

00001440 <heap.arena_allocator.ArenaAllocator.free>:
    1440:	57                               	push   edi
    1441:	56                               	push   esi
    1442:	83 ec 14                         	sub    esp,0x14
    1445:	f6 c1 03                         	test   cl,0x3
    1448:	75 47                            	jne    1491 <heap.arena_allocator.ArenaAllocator.free+0x51>
    144a:	8b 41 08                         	mov    eax,DWORD PTR [ecx+0x8]
    144d:	85 c0                            	test   eax,eax
    144f:	74 23                            	je     1474 <heap.arena_allocator.ArenaAllocator.free+0x34>
    1451:	83 78 04 07                      	cmp    DWORD PTR [eax+0x4],0x7
    1455:	76 51                            	jbe    14a8 <heap.arena_allocator.ArenaAllocator.free+0x68>
    1457:	83 c0 08                         	add    eax,0x8
    145a:	8b 71 0c                         	mov    esi,DWORD PTR [ecx+0xc]
    145d:	01 f0                            	add    eax,esi
    145f:	72 19                            	jb     147a <heap.arena_allocator.ArenaAllocator.free+0x3a>
    1461:	8b 7c 24 20                      	mov    edi,DWORD PTR [esp+0x20]
    1465:	01 fa                            	add    edx,edi
    1467:	72 11                            	jb     147a <heap.arena_allocator.ArenaAllocator.free+0x3a>
    1469:	39 d0                            	cmp    eax,edx
    146b:	75 07                            	jne    1474 <heap.arena_allocator.ArenaAllocator.free+0x34>
    146d:	29 fe                            	sub    esi,edi
    146f:	72 09                            	jb     147a <heap.arena_allocator.ArenaAllocator.free+0x3a>
    1471:	89 71 0c                         	mov    DWORD PTR [ecx+0xc],esi
    1474:	83 c4 14                         	add    esp,0x14
    1477:	5e                               	pop    esi
    1478:	5f                               	pop    edi
    1479:	c3                               	ret
    147a:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1482:	b9 25 00 00 00                   	mov    ecx,0x25
    1487:	ba 10 00 00 00                   	mov    edx,0x10
    148c:	e8 fc ff ff ff                   	call   148d <heap.arena_allocator.ArenaAllocator.free+0x4d>
    1491:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    1499:	b9 36 00 00 00                   	mov    ecx,0x36
    149e:	ba 13 00 00 00                   	mov    edx,0x13
    14a3:	e8 fc ff ff ff                   	call   14a4 <heap.arena_allocator.ArenaAllocator.free+0x64>
    14a8:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
    14b0:	b9 00 00 00 00                   	mov    ecx,0x0
    14b5:	ba 24 00 00 00                   	mov    edx,0x24
    14ba:	e8 fc ff ff ff                   	call   14bb <heap.arena_allocator.ArenaAllocator.free+0x7b>

Disassembly of section .text.unlikely.:

00000000 <builtin.default_panic>:
   0:	83 ec 1c                         	sub    esp,0x1c
   3:	89 c8                            	mov    eax,ecx
   5:	80 7c 24 24 00                   	cmp    BYTE PTR [esp+0x24],0x0
   a:	75 06                            	jne    12 <builtin.default_panic+0x12>
   c:	8b 4c 24 1c                      	mov    ecx,DWORD PTR [esp+0x1c]
  10:	eb 04                            	jmp    16 <builtin.default_panic+0x16>
  12:	8b 4c 24 20                      	mov    ecx,DWORD PTR [esp+0x20]
  16:	89 4c 24 10                      	mov    DWORD PTR [esp+0x10],ecx
  1a:	c6 44 24 14 01                   	mov    BYTE PTR [esp+0x14],0x1
  1f:	89 14 24                         	mov    DWORD PTR [esp],edx
  22:	8d 4c 24 10                      	lea    ecx,[esp+0x10]
  26:	89 c2                            	mov    edx,eax
  28:	e8 03 00 00 00                   	call   30 <debug.panicImpl>
  2d:	90                               	nop
  2e:	90                               	nop
  2f:	90                               	nop

00000030 <debug.panicImpl>:
  30:	55                               	push   ebp
  31:	89 e5                            	mov    ebp,esp
  33:	53                               	push   ebx
  34:	57                               	push   edi
  35:	56                               	push   esi
  36:	81 ec 4c 06 00 00                	sub    esp,0x64c
  3c:	89 d7                            	mov    edi,edx
  3e:	89 4d d4                         	mov    DWORD PTR [ebp-0x2c],ecx
  41:	8d 85 40 fa ff ff                	lea    eax,[ebp-0x5c0]
  47:	89 45 e4                         	mov    DWORD PTR [ebp-0x1c],eax
  4a:	c7 45 e8 20 00 00 00             	mov    DWORD PTR [ebp-0x18],0x20
  51:	c7 45 e0 00 00 00 00             	mov    DWORD PTR [ebp-0x20],0x0
  58:	8d 85 58 fe ff ff                	lea    eax,[ebp-0x1a8]
  5e:	89 85 b4 fd ff ff                	mov    DWORD PTR [ebp-0x24c],eax
  64:	c7 85 b8 fd ff ff 20 00 00 00    	mov    DWORD PTR [ebp-0x248],0x20
  6e:	c7 85 b0 fd ff ff 00 00 00 00    	mov    DWORD PTR [ebp-0x250],0x0
  78:	8d b5 c0 fa ff ff                	lea    esi,[ebp-0x540]
  7e:	89 34 24                         	mov    DWORD PTR [esp],esi
  81:	c7 44 24 08 8c 00 00 00          	mov    DWORD PTR [esp+0x8],0x8c
  89:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
  91:	e8 fc ff ff ff                   	call   92 <debug.panicImpl+0x62>
  96:	89 34 24                         	mov    DWORD PTR [esp],esi
  99:	8d 8d b0 fd ff ff                	lea    ecx,[ebp-0x250]
  9f:	ba 0b 00 00 00                   	mov    edx,0xb
  a4:	e8 0c 01 00 00                   	call   1b5 <debug.panicImpl+0x185>
  a9:	66 85 c0                         	test   ax,ax
  ac:	75 48                            	jne    f6 <debug.panicImpl+0xc6>
  ae:	89 34 24                         	mov    DWORD PTR [esp],esi
  b1:	8d 8d b0 fd ff ff                	lea    ecx,[ebp-0x250]
  b7:	ba 04 00 00 00                   	mov    edx,0x4
  bc:	e8 0c 01 00 00                   	call   1cd <debug.panicImpl+0x19d>
  c1:	66 85 c0                         	test   ax,ax
  c4:	75 30                            	jne    f6 <debug.panicImpl+0xc6>
  c6:	89 34 24                         	mov    DWORD PTR [esp],esi
  c9:	8d 8d b0 fd ff ff                	lea    ecx,[ebp-0x250]
  cf:	ba 07 00 00 00                   	mov    edx,0x7
  d4:	e8 0c 01 00 00                   	call   1e5 <debug.panicImpl+0x1b5>
  d9:	66 85 c0                         	test   ax,ax
  dc:	75 18                            	jne    f6 <debug.panicImpl+0xc6>
  de:	89 34 24                         	mov    DWORD PTR [esp],esi
  e1:	8d 8d b0 fd ff ff                	lea    ecx,[ebp-0x250]
  e7:	ba 08 00 00 00                   	mov    edx,0x8
  ec:	e8 0c 01 00 00                   	call   1fd <debug.panicImpl+0x1cd>
  f1:	66 85 c0                         	test   ax,ax
  f4:	74 0b                            	je     101 <debug.panicImpl+0xd1>
  f6:	8d 8d b0 fd ff ff                	lea    ecx,[ebp-0x250]
  fc:	e8 9f 0b 00 00                   	call   ca0 <builtin.returnError>
 101:	65 a1 00 00 00 00                	mov    eax,gs:0x0
 107:	85 c0                            	test   eax,eax
 109:	0f 85 78 08 00 00                	jne    987 <debug.panicImpl+0x957>
 10f:	65 c7 05 00 00 00 00 01 00 00 00 	mov    DWORD PTR gs:0x0,0x1
 11a:	f0 fe 05 00 00 00 00             	lock inc BYTE PTR ds:0x0
 121:	f0 0f ba 2d 04 00 00 00 00       	lock bts DWORD PTR ds:0x4,0x0
 12a:	73 05                            	jae    131 <debug.panicImpl+0x101>
 12c:	e8 0f 0c 00 00                   	call   d40 <Thread.Mutex.FutexImpl.lockSlow>
 131:	c7 45 d8 02 00 00 00             	mov    DWORD PTR [ebp-0x28],0x2
 138:	65 80 3d 00 00 00 00 01          	cmp    BYTE PTR gs:0x0,0x1
 140:	89 7d ec                         	mov    DWORD PTR [ebp-0x14],edi
 143:	75 0b                            	jne    150 <debug.panicImpl+0x120>
 145:	65 a1 00 00 00 00                	mov    eax,gs:0x0
 14b:	89 45 f0                         	mov    DWORD PTR [ebp-0x10],eax
 14e:	eb 18                            	jmp    168 <debug.panicImpl+0x138>
 150:	b8 e0 00 00 00                   	mov    eax,0xe0
 155:	cd 80                            	int    0x80
 157:	89 45 f0                         	mov    DWORD PTR [ebp-0x10],eax
 15a:	65 a3 00 00 00 00                	mov    gs:0x0,eax
 160:	65 c6 05 00 00 00 00 01          	mov    BYTE PTR gs:0x0,0x1
 168:	31 db                            	xor    ebx,ebx
 16a:	8d bd c0 fa ff ff                	lea    edi,[ebp-0x540]
 170:	8d 75 e0                         	lea    esi,[ebp-0x20]
 173:	90                               	nop
 174:	90                               	nop
 175:	90                               	nop
 176:	90                               	nop
 177:	90                               	nop
 178:	90                               	nop
 179:	90                               	nop
 17a:	90                               	nop
 17b:	90                               	nop
 17c:	90                               	nop
 17d:	90                               	nop
 17e:	90                               	nop
 17f:	90                               	nop
 180:	83 fb 07                         	cmp    ebx,0x7
 183:	0f 87 61 08 00 00                	ja     9ea <debug.panicImpl+0x9ba>
 189:	8d 83 c3 01 00 00                	lea    eax,[ebx+0x1c3]
 18f:	b9 07 00 00 00                   	mov    ecx,0x7
 194:	29 d9                            	sub    ecx,ebx
 196:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
 19a:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
 19e:	c7 04 24 02 00 00 00             	mov    DWORD PTR [esp],0x2
 1a5:	89 f9                            	mov    ecx,edi
 1a7:	89 f2                            	mov    edx,esi
 1a9:	e8 bc 05 00 00                   	call   76a <debug.panicImpl+0x73a>
 1ae:	66 83 bd c4 fa ff ff 00          	cmp    WORD PTR [ebp-0x53c],0x0
 1b6:	0f 85 b2 04 00 00                	jne    66e <debug.panicImpl+0x63e>
 1bc:	03 9d c0 fa ff ff                	add    ebx,DWORD PTR [ebp-0x540]
 1c2:	0f 82 1b 07 00 00                	jb     8e3 <debug.panicImpl+0x8b3>
 1c8:	83 fb 07                         	cmp    ebx,0x7
 1cb:	75 b3                            	jne    180 <debug.panicImpl+0x150>
 1cd:	c6 85 e0 fa ff ff aa             	mov    BYTE PTR [ebp-0x520],0xaa
 1d4:	c7 85 dc fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x524],0xaaaaaaaa
 1de:	c7 85 d8 fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x528],0xaaaaaaaa
 1e8:	c7 85 d4 fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x52c],0xaaaaaaaa
 1f2:	c7 85 d0 fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x530],0xaaaaaaaa
 1fc:	c7 85 cc fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x534],0xaaaaaaaa
 206:	c7 85 c8 fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x538],0xaaaaaaaa
 210:	c7 85 c4 fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x53c],0xaaaaaaaa
 21a:	c7 85 c0 fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x540],0xaaaaaaaa
 224:	b8 21 00 00 00                   	mov    eax,0x21
 229:	8b 5d f0                         	mov    ebx,DWORD PTR [ebp-0x10]
 22c:	83 fb 64                         	cmp    ebx,0x64
 22f:	0f 82 da 00 00 00                	jb     30f <debug.panicImpl+0x2df>
 235:	b9 1f 85 eb 51                   	mov    ecx,0x51eb851f
 23a:	89 d8                            	mov    eax,ebx
 23c:	f7 e1                            	mul    ecx
 23e:	89 d1                            	mov    ecx,edx
 240:	c1 e9 05                         	shr    ecx,0x5
 243:	6b c1 64                         	imul   eax,ecx,0x64
 246:	89 da                            	mov    edx,ebx
 248:	29 c2                            	sub    edx,eax
 24a:	0f b7 84 12 fa 00 00 00          	movzx  eax,WORD PTR [edx+edx*1+0xfa]
 252:	66 89 85 df fa ff ff             	mov    WORD PTR [ebp-0x521],ax
 259:	b8 1f 00 00 00                   	mov    eax,0x1f
 25e:	81 fb 0f 27 00 00                	cmp    ebx,0x270f
 264:	0f 86 a3 00 00 00                	jbe    30d <debug.panicImpl+0x2dd>
 26a:	be 29 5c 8f 02                   	mov    esi,0x28f5c29
 26f:	89 c8                            	mov    eax,ecx
 271:	f7 e6                            	mul    esi
 273:	6b c2 64                         	imul   eax,edx,0x64
 276:	29 c1                            	sub    ecx,eax
 278:	0f b7 84 09 fa 00 00 00          	movzx  eax,WORD PTR [ecx+ecx*1+0xfa]
 280:	66 89 85 dd fa ff ff             	mov    WORD PTR [ebp-0x523],ax
 287:	b9 59 17 b7 d1                   	mov    ecx,0xd1b71759
 28c:	89 d8                            	mov    eax,ebx
 28e:	f7 e1                            	mul    ecx
 290:	89 d1                            	mov    ecx,edx
 292:	c1 e9 0d                         	shr    ecx,0xd
 295:	b8 1d 00 00 00                   	mov    eax,0x1d
 29a:	81 fb 40 42 0f 00                	cmp    ebx,0xf4240
 2a0:	72 6b                            	jb     30d <debug.panicImpl+0x2dd>
 2a2:	89 c8                            	mov    eax,ecx
 2a4:	f7 e6                            	mul    esi
 2a6:	6b c2 64                         	imul   eax,edx,0x64
 2a9:	29 c1                            	sub    ecx,eax
 2ab:	0f b7 84 09 fa 00 00 00          	movzx  eax,WORD PTR [ecx+ecx*1+0xfa]
 2b3:	66 89 85 db fa ff ff             	mov    WORD PTR [ebp-0x525],ax
 2ba:	b9 83 de 1b 43                   	mov    ecx,0x431bde83
 2bf:	89 d8                            	mov    eax,ebx
 2c1:	f7 e1                            	mul    ecx
 2c3:	c1 ea 12                         	shr    edx,0x12
 2c6:	b8 1b 00 00 00                   	mov    eax,0x1b
 2cb:	81 fb 00 e1 f5 05                	cmp    ebx,0x5f5e100
 2d1:	72 4e                            	jb     321 <debug.panicImpl+0x2f1>
 2d3:	69 c2 7b 14 00 00                	imul   eax,edx,0x147b
 2d9:	c1 e8 13                         	shr    eax,0x13
 2dc:	6b c0 64                         	imul   eax,eax,0x64
 2df:	29 c2                            	sub    edx,eax
 2e1:	0f b7 c2                         	movzx  eax,dx
 2e4:	0f b7 8c 00 fa 00 00 00          	movzx  ecx,WORD PTR [eax+eax*1+0xfa]
 2ec:	ba 89 3b e6 55                   	mov    edx,0x55e63b89
 2f1:	89 d8                            	mov    eax,ebx
 2f3:	f7 e2                            	mul    edx
 2f5:	66 89 8d d9 fa ff ff             	mov    WORD PTR [ebp-0x527],cx
 2fc:	89 d3                            	mov    ebx,edx
 2fe:	c1 eb 19                         	shr    ebx,0x19
 301:	b8 19 00 00 00                   	mov    eax,0x19
 306:	83 fb 0a                         	cmp    ebx,0xa
 309:	72 09                            	jb     314 <debug.panicImpl+0x2e4>
 30b:	eb 1b                            	jmp    328 <debug.panicImpl+0x2f8>
 30d:	89 cb                            	mov    ebx,ecx
 30f:	83 fb 0a                         	cmp    ebx,0xa
 312:	73 14                            	jae    328 <debug.panicImpl+0x2f8>
 314:	80 c3 30                         	add    bl,0x30
 317:	88 9c 05 bf fa ff ff             	mov    BYTE PTR [ebp+eax*1-0x541],bl
 31e:	48                               	dec    eax
 31f:	eb 1a                            	jmp    33b <debug.panicImpl+0x30b>
 321:	89 d3                            	mov    ebx,edx
 323:	83 fb 0a                         	cmp    ebx,0xa
 326:	72 ec                            	jb     314 <debug.panicImpl+0x2e4>
 328:	0f b7 8c 1b fa 00 00 00          	movzx  ecx,WORD PTR [ebx+ebx*1+0xfa]
 330:	66 89 8c 05 be fa ff ff          	mov    WORD PTR [ebp+eax*1-0x542],cx
 338:	83 c0 fe                         	add    eax,0xfffffffe
 33b:	8d 14 28                         	lea    edx,[eax+ebp*1]
 33e:	81 c2 c0 fa ff ff                	add    edx,0xfffffac0
 344:	b9 21 00 00 00                   	mov    ecx,0x21
 349:	29 c1                            	sub    ecx,eax
 34b:	8d 45 d8                         	lea    eax,[ebp-0x28]
 34e:	89 44 24 08                      	mov    DWORD PTR [esp+0x8],eax
 352:	89 0c 24                         	mov    DWORD PTR [esp],ecx
 355:	c7 44 24 04 b8 04 00 00          	mov    DWORD PTR [esp+0x4],0x4b8
 35d:	8d 4d e0                         	lea    ecx,[ebp-0x20]
 360:	e8 ac 06 00 00                   	call   a11 <debug.panicImpl+0x9e1>
 365:	66 85 c0                         	test   ax,ax
 368:	0f 85 05 03 00 00                	jne    673 <debug.panicImpl+0x643>
 36e:	31 db                            	xor    ebx,ebx
 370:	8d bd c0 fa ff ff                	lea    edi,[ebp-0x540]
 376:	8d 75 e0                         	lea    esi,[ebp-0x20]
 379:	90                               	nop
 37a:	90                               	nop
 37b:	90                               	nop
 37c:	90                               	nop
 37d:	90                               	nop
 37e:	90                               	nop
 37f:	90                               	nop
 380:	83 fb 08                         	cmp    ebx,0x8
 383:	0f 87 61 06 00 00                	ja     9ea <debug.panicImpl+0x9ba>
 389:	8d 83 09 00 00 00                	lea    eax,[ebx+0x9]
 38f:	b9 08 00 00 00                   	mov    ecx,0x8
 394:	29 d9                            	sub    ecx,ebx
 396:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
 39a:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
 39e:	c7 04 24 02 00 00 00             	mov    DWORD PTR [esp],0x2
 3a5:	89 f9                            	mov    ecx,edi
 3a7:	89 f2                            	mov    edx,esi
 3a9:	e8 bc 05 00 00                   	call   96a <debug.panicImpl+0x93a>
 3ae:	66 83 bd c4 fa ff ff 00          	cmp    WORD PTR [ebp-0x53c],0x0
 3b6:	0f 85 b2 02 00 00                	jne    66e <debug.panicImpl+0x63e>
 3bc:	03 9d c0 fa ff ff                	add    ebx,DWORD PTR [ebp-0x540]
 3c2:	0f 82 1b 05 00 00                	jb     8e3 <debug.panicImpl+0x8b3>
 3c8:	83 fb 08                         	cmp    ebx,0x8
 3cb:	75 b3                            	jne    380 <debug.panicImpl+0x350>
 3cd:	8d 45 d8                         	lea    eax,[ebp-0x28]
 3d0:	89 44 24 08                      	mov    DWORD PTR [esp+0x8],eax
 3d4:	8b 45 08                         	mov    eax,DWORD PTR [ebp+0x8]
 3d7:	89 04 24                         	mov    DWORD PTR [esp],eax
 3da:	c7 44 24 04 b8 04 00 00          	mov    DWORD PTR [esp+0x4],0x4b8
 3e2:	8d 4d e0                         	lea    ecx,[ebp-0x20]
 3e5:	8b 55 ec                         	mov    edx,DWORD PTR [ebp-0x14]
 3e8:	e8 ac 06 00 00                   	call   a99 <debug.panicImpl+0xa69>
 3ed:	66 85 c0                         	test   ax,ax
 3f0:	0f 85 78 02 00 00                	jne    66e <debug.panicImpl+0x63e>
 3f6:	31 c0                            	xor    eax,eax
 3f8:	8d b5 c0 fa ff ff                	lea    esi,[ebp-0x540]
 3fe:	8d 7d e0                         	lea    edi,[ebp-0x20]
 401:	85 c0                            	test   eax,eax
 403:	75 43                            	jne    448 <debug.panicImpl+0x418>
 405:	90                               	nop
 406:	90                               	nop
 407:	90                               	nop
 408:	90                               	nop
 409:	90                               	nop
 40a:	90                               	nop
 40b:	90                               	nop
 40c:	90                               	nop
 40d:	90                               	nop
 40e:	90                               	nop
 40f:	90                               	nop
 410:	c7 44 24 08 01 00 00 00          	mov    DWORD PTR [esp+0x8],0x1
 418:	c7 44 24 04 03 00 00 00          	mov    DWORD PTR [esp+0x4],0x3
 420:	c7 04 24 02 00 00 00             	mov    DWORD PTR [esp],0x2
 427:	89 f1                            	mov    ecx,esi
 429:	89 fa                            	mov    edx,edi
 42b:	e8 bc 05 00 00                   	call   9ec <debug.panicImpl+0x9bc>
 430:	66 83 bd c4 fa ff ff 00          	cmp    WORD PTR [ebp-0x53c],0x0
 438:	0f 85 30 02 00 00                	jne    66e <debug.panicImpl+0x63e>
 43e:	8b 85 c0 fa ff ff                	mov    eax,DWORD PTR [ebp-0x540]
 444:	85 c0                            	test   eax,eax
 446:	74 c8                            	je     410 <debug.panicImpl+0x3e0>
 448:	83 f8 01                         	cmp    eax,0x1
 44b:	0f 85 99 05 00 00                	jne    9ea <debug.panicImpl+0x9ba>
 451:	8d 85 c0 f9 ff ff                	lea    eax,[ebp-0x640]
 457:	89 45 bc                         	mov    DWORD PTR [ebp-0x44],eax
 45a:	c7 45 c0 20 00 00 00             	mov    DWORD PTR [ebp-0x40],0x20
 461:	c7 45 b8 00 00 00 00             	mov    DWORD PTR [ebp-0x48],0x0
 468:	80 3d 2c 00 00 00 00             	cmp    BYTE PTR ds:0x2c,0x0
 46f:	0f 85 87 00 00 00                	jne    4fc <debug.panicImpl+0x4cc>
 475:	80 3d 30 00 00 00 00             	cmp    BYTE PTR ds:0x30,0x0
 47c:	75 31                            	jne    4af <debug.panicImpl+0x47f>
 47e:	a1 80 06 00 00                   	mov    eax,ds:0x680
 483:	8b 0d 84 06 00 00                	mov    ecx,DWORD PTR ds:0x684
 489:	89 0d 3c 00 00 00                	mov    DWORD PTR ds:0x3c,ecx
 48f:	a3 38 00 00 00                   	mov    ds:0x38,eax
 494:	c7 05 44 00 00 00 00 00 00 00    	mov    DWORD PTR ds:0x44,0x0
 49e:	c7 05 40 00 00 00 00 00 00 00    	mov    DWORD PTR ds:0x40,0x0
 4a8:	c6 05 30 00 00 00 01             	mov    BYTE PTR ds:0x30,0x1
 4af:	c7 05 20 00 00 00 00 00 00 00    	mov    DWORD PTR ds:0x20,0x0
 4b9:	c7 05 1c 00 00 00 00 00 00 00    	mov    DWORD PTR ds:0x1c,0x0
 4c3:	c7 05 18 00 00 00 00 00 00 00    	mov    DWORD PTR ds:0x18,0x0
 4cd:	c7 05 14 00 00 00 dc 06 00 00    	mov    DWORD PTR ds:0x14,0x6dc
 4d7:	c7 05 10 00 00 00 38 00 00 00    	mov    DWORD PTR ds:0x10,0x38
 4e1:	c7 05 28 00 00 00 dc 06 00 00    	mov    DWORD PTR ds:0x28,0x6dc
 4eb:	c7 05 24 00 00 00 38 00 00 00    	mov    DWORD PTR ds:0x24,0x38
 4f5:	c6 05 2c 00 00 00 01             	mov    BYTE PTR ds:0x2c,0x1
 4fc:	8d b5 c0 fa ff ff                	lea    esi,[ebp-0x540]
 502:	bb 02 00 00 00                   	mov    ebx,0x2
 507:	b9 13 54 00 00                   	mov    ecx,0x5413
 50c:	eb 0a                            	jmp    518 <debug.panicImpl+0x4e8>
 50e:	90                               	nop
 50f:	90                               	nop
 510:	31 c0                            	xor    eax,eax
 512:	66 83 f8 04                      	cmp    ax,0x4
 516:	75 2c                            	jne    544 <debug.panicImpl+0x514>
 518:	c7 85 c4 fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x53c],0xaaaaaaaa
 522:	c7 85 c0 fa ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x540],0xaaaaaaaa
 52c:	b8 36 00 00 00                   	mov    eax,0x36
 531:	89 f2                            	mov    edx,esi
 533:	cd 80                            	int    0x80
 535:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
 53a:	72 d4                            	jb     510 <debug.panicImpl+0x4e0>
 53c:	f7 d8                            	neg    eax
 53e:	66 83 f8 04                      	cmp    ax,0x4
 542:	74 d4                            	je     518 <debug.panicImpl+0x4e8>
 544:	0f b7 c0                         	movzx  eax,ax
 547:	85 c0                            	test   eax,eax
 549:	89 34 24                         	mov    DWORD PTR [esp],esi
 54c:	c7 44 24 08 ec 02 00 00          	mov    DWORD PTR [esp+0x8],0x2ec
 554:	c7 44 24 04 aa 00 00 00          	mov    DWORD PTR [esp+0x4],0xaa
 55c:	e8 fc ff ff ff                   	call   55d <debug.panicImpl+0x52d>
 561:	89 f2                            	mov    edx,esi
 563:	e8 4c 05 00 00                   	call   ab4 <debug.panicImpl+0xa84>
 568:	85 c0                            	test   eax,eax
 56a:	75 62                            	jne    5ce <debug.panicImpl+0x59e>
 56c:	8b 45 d4                         	mov    eax,DWORD PTR [ebp-0x2c]
 56f:	8b 08                            	mov    ecx,DWORD PTR [eax]
 571:	89 4d f0                         	mov    DWORD PTR [ebp-0x10],ecx
 574:	8b 40 04                         	mov    eax,DWORD PTR [eax+0x4]
 577:	89 45 ec                         	mov    DWORD PTR [ebp-0x14],eax
 57a:	8b bd 0c fb ff ff                	mov    edi,DWORD PTR [ebp-0x4f4]
 580:	a1 14 00 00 00                   	mov    eax,ds:0x14
 585:	8b 0d 10 00 00 00                	mov    ecx,DWORD PTR ds:0x10
 58b:	8b 55 04                         	mov    edx,DWORD PTR [ebp+0x4]
 58e:	89 54 24 04                      	mov    DWORD PTR [esp+0x4],edx
 592:	c7 04 24 02 00 00 00             	mov    DWORD PTR [esp],0x2
 599:	ba ec 02 00 00                   	mov    edx,0x2ec
 59e:	ff 10                            	call   DWORD PTR [eax]
 5a0:	85 c0                            	test   eax,eax
 5a2:	0f 85 68 04 00 00                	jne    a10 <debug.panicImpl+0x9e0>
 5a8:	8d 75 b8                         	lea    esi,[ebp-0x48]
 5ab:	89 f1                            	mov    ecx,esi
 5ad:	e8 ee 06 00 00                   	call   ca0 <builtin.returnError>
 5b2:	89 f1                            	mov    ecx,esi
 5b4:	e8 e7 06 00 00                   	call   ca0 <builtin.returnError>
 5b9:	89 f1                            	mov    ecx,esi
 5bb:	e8 e0 06 00 00                   	call   ca0 <builtin.returnError>
 5c0:	89 f1                            	mov    ecx,esi
 5c2:	e8 d9 06 00 00                   	call   ca0 <builtin.returnError>
 5c7:	c7 45 b8 00 00 00 00             	mov    DWORD PTR [ebp-0x48],0x0
 5ce:	b8 44 05 00 00                   	mov    eax,0x544
 5d3:	80 b8 a8 00 00 00 00             	cmp    BYTE PTR [eax+0xa8],0x0
 5da:	75 3e                            	jne    61a <debug.panicImpl+0x5ea>
 5dc:	8b 4d d4                         	mov    ecx,DWORD PTR [ebp-0x2c]
 5df:	8b 01                            	mov    eax,DWORD PTR [ecx]
 5e1:	8b 49 04                         	mov    ecx,DWORD PTR [ecx+0x4]
 5e4:	89 8d b4 fd ff ff                	mov    DWORD PTR [ebp-0x24c],ecx
 5ea:	89 85 b0 fd ff ff                	mov    DWORD PTR [ebp-0x250],eax
 5f0:	89 ad b8 fd ff ff                	mov    DWORD PTR [ebp-0x248],ebp
 5f6:	8d 85 bc fd ff ff                	lea    eax,[ebp-0x244]
 5fc:	89 04 24                         	mov    DWORD PTR [esp],eax
 5ff:	c7 44 24 08 9c 00 00 00          	mov    DWORD PTR [esp+0x8],0x9c
 607:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 60f:	e8 fc ff ff ff                   	call   610 <debug.panicImpl+0x5e0>
 614:	8d 85 b0 fd ff ff                	lea    eax,[ebp-0x250]
 61a:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
 61e:	8d b5 08 ff ff ff                	lea    esi,[ebp-0xf8]
 624:	89 34 24                         	mov    DWORD PTR [esp],esi
 627:	c7 44 24 08 a8 00 00 00          	mov    DWORD PTR [esp+0x8],0xa8
 62f:	e8 fc ff ff ff                   	call   630 <debug.panicImpl+0x600>
 634:	8d 4d b0                         	lea    ecx,[ebp-0x50]
 637:	89 f2                            	mov    edx,esi
 639:	e8 bc 0c 00 00                   	call   12fa <heap.arena_allocator.ArenaAllocator.alloc+0x2aa>
 63e:	80 7d b4 00                      	cmp    BYTE PTR [ebp-0x4c],0x0
 642:	75 64                            	jne    6a8 <debug.panicImpl+0x678>
 644:	80 7d ac 00                      	cmp    BYTE PTR [ebp-0x54],0x0
 648:	0f 85 bf 00 00 00                	jne    70d <debug.panicImpl+0x6dd>
 64e:	31 f6                            	xor    esi,esi
 650:	31 c0                            	xor    eax,eax
 652:	87 05 04 00 00 00                	xchg   DWORD PTR ds:0x4,eax
 658:	83 f8 03                         	cmp    eax,0x3
 65b:	0f 84 dd 00 00 00                	je     73e <debug.panicImpl+0x70e>
 661:	85 c0                            	test   eax,eax
 663:	0f 84 6b 01 00 00                	je     7d4 <debug.panicImpl+0x7a4>
 669:	e9 04 01 00 00                   	jmp    772 <debug.panicImpl+0x742>
 66e:	8d 4d e0                         	lea    ecx,[ebp-0x20]
 671:	eb 1a                            	jmp    68d <debug.panicImpl+0x65d>
 673:	8d 75 e0                         	lea    esi,[ebp-0x20]
 676:	89 f1                            	mov    ecx,esi
 678:	e8 23 06 00 00                   	call   ca0 <builtin.returnError>
 67d:	89 f1                            	mov    ecx,esi
 67f:	e8 1c 06 00 00                   	call   ca0 <builtin.returnError>
 684:	89 f1                            	mov    ecx,esi
 686:	e8 15 06 00 00                   	call   ca0 <builtin.returnError>
 68b:	89 f1                            	mov    ecx,esi
 68d:	e8 0e 06 00 00                   	call   ca0 <builtin.returnError>
 692:	8d 75 e0                         	lea    esi,[ebp-0x20]
 695:	89 f1                            	mov    ecx,esi
 697:	e8 04 06 00 00                   	call   ca0 <builtin.returnError>
 69c:	89 f1                            	mov    ecx,esi
 69e:	e8 fd 05 00 00                   	call   ca0 <builtin.returnError>
 6a3:	e8 98 04 00 00                   	call   b40 <os.abort>
 6a8:	80 bd 0c ff ff ff 00             	cmp    BYTE PTR [ebp-0xf4],0x0
 6af:	0f 84 2e 02 00 00                	je     8e3 <debug.panicImpl+0x8b3>
 6b5:	8b 9d 08 ff ff ff                	mov    ebx,DWORD PTR [ebp-0xf8]
 6bb:	39 5d b0                         	cmp    DWORD PTR [ebp-0x50],ebx
 6be:	0f 84 1f 02 00 00                	je     8e3 <debug.panicImpl+0x8b3>
 6c4:	8d 4d c8                         	lea    ecx,[ebp-0x38]
 6c7:	8d 95 08 ff ff ff                	lea    edx,[ebp-0xf8]
 6cd:	e8 bc 0c 00 00                   	call   138e <heap.arena_allocator.ArenaAllocator.createNode+0x8e>
 6d2:	80 7d cc 00                      	cmp    BYTE PTR [ebp-0x34],0x0
 6d6:	0f 84 68 ff ff ff                	je     644 <debug.panicImpl+0x614>
 6dc:	8d 75 c8                         	lea    esi,[ebp-0x38]
 6df:	8d bd 08 ff ff ff                	lea    edi,[ebp-0xf8]
 6e5:	90                               	nop
 6e6:	90                               	nop
 6e7:	90                               	nop
 6e8:	90                               	nop
 6e9:	90                               	nop
 6ea:	90                               	nop
 6eb:	90                               	nop
 6ec:	90                               	nop
 6ed:	90                               	nop
 6ee:	90                               	nop
 6ef:	90                               	nop
 6f0:	39 5d c8                         	cmp    DWORD PTR [ebp-0x38],ebx
 6f3:	0f 84 ea 01 00 00                	je     8e3 <debug.panicImpl+0x8b3>
 6f9:	89 f1                            	mov    ecx,esi
 6fb:	89 fa                            	mov    edx,edi
 6fd:	e8 bc 0c 00 00                   	call   13be <heap.arena_allocator.ArenaAllocator.resize+0x2e>
 702:	80 7d cc 00                      	cmp    BYTE PTR [ebp-0x34],0x0
 706:	75 e8                            	jne    6f0 <debug.panicImpl+0x6c0>
 708:	e9 37 ff ff ff                   	jmp    644 <debug.panicImpl+0x614>
 70d:	66 83 7d a8 00                   	cmp    WORD PTR [ebp-0x58],0x0
 712:	0f 85 cb 01 00 00                	jne    8e3 <debug.panicImpl+0x8b3>
 718:	8b 85 18 ff ff ff                	mov    eax,DWORD PTR [ebp-0xe8]
 71e:	8b 9d 1c ff ff ff                	mov    ebx,DWORD PTR [ebp-0xe4]
 724:	8b b5 48 ff ff ff                	mov    esi,DWORD PTR [ebp-0xb8]
 72a:	85 f6                            	test   esi,esi
 72c:	0f 85 b9 00 00 00                	jne    7eb <debug.panicImpl+0x7bb>
 732:	31 f6                            	xor    esi,esi
 734:	bf 04 00 00 00                   	mov    edi,0x4
 739:	e9 c2 00 00 00                   	jmp    800 <debug.panicImpl+0x7d0>
 73e:	b8 f0 00 00 00                   	mov    eax,0xf0
 743:	bb 04 00 00 00                   	mov    ebx,0x4
 748:	b9 81 00 00 00                   	mov    ecx,0x81
 74d:	ba 01 00 00 00                   	mov    edx,0x1
 752:	cd 80                            	int    0x80
 754:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
 759:	72 04                            	jb     75f <debug.panicImpl+0x72f>
 75b:	f7 d8                            	neg    eax
 75d:	89 c6                            	mov    esi,eax
 75f:	66 83 fe 16                      	cmp    si,0x16
 763:	77 6f                            	ja     7d4 <debug.panicImpl+0x7a4>
 765:	0f b7 c6                         	movzx  eax,si
 768:	b9 01 40 40 00                   	mov    ecx,0x404001
 76d:	0f a3 c1                         	bt     ecx,eax
 770:	73 62                            	jae    7d4 <debug.panicImpl+0x7a4>
 772:	f0 fe 0d 00 00 00 00             	lock dec BYTE PTR ds:0x0
 779:	75 05                            	jne    780 <debug.panicImpl+0x750>
 77b:	e8 c0 03 00 00                   	call   b40 <os.abort>
 780:	c7 85 c0 fa ff ff 00 00 00 00    	mov    DWORD PTR [ebp-0x540],0x0
 78a:	8d 9d c0 fa ff ff                	lea    ebx,[ebp-0x540]
 790:	31 d2                            	xor    edx,edx
 792:	31 f6                            	xor    esi,esi
 794:	90                               	nop
 795:	90                               	nop
 796:	90                               	nop
 797:	90                               	nop
 798:	90                               	nop
 799:	90                               	nop
 79a:	90                               	nop
 79b:	90                               	nop
 79c:	90                               	nop
 79d:	90                               	nop
 79e:	90                               	nop
 79f:	90                               	nop
 7a0:	31 ff                            	xor    edi,edi
 7a2:	b8 f0 00 00 00                   	mov    eax,0xf0
 7a7:	b9 80 00 00 00                   	mov    ecx,0x80
 7ac:	cd 80                            	int    0x80
 7ae:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
 7b3:	72 04                            	jb     7b9 <debug.panicImpl+0x789>
 7b5:	f7 d8                            	neg    eax
 7b7:	89 c7                            	mov    edi,eax
 7b9:	0f b7 c7                         	movzx  eax,di
 7bc:	66 83 f8 16                      	cmp    ax,0x16
 7c0:	77 0f                            	ja     7d1 <debug.panicImpl+0x7a1>
 7c2:	b9 11 08 40 00                   	mov    ecx,0x400811
 7c7:	0f a3 c1                         	bt     ecx,eax
 7ca:	72 d4                            	jb     7a0 <debug.panicImpl+0x770>
 7cc:	83 f8 0e                         	cmp    eax,0xe
 7cf:	74 03                            	je     7d4 <debug.panicImpl+0x7a4>
 7d1:	83 f8 6e                         	cmp    eax,0x6e
 7d4:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 7dc:	b9 e1 00 00 00                   	mov    ecx,0xe1
 7e1:	ba 18 00 00 00                   	mov    edx,0x18
 7e6:	e8 15 f8 ff ff                   	call   0 <builtin.default_panic>
 7eb:	81 fe 00 00 00 20                	cmp    esi,0x20000000
 7f1:	0f 83 ec 00 00 00                	jae    8e3 <debug.panicImpl+0x8b3>
 7f7:	8b bd 40 ff ff ff                	mov    edi,DWORD PTR [ebp-0xc0]
 7fd:	c1 e6 03                         	shl    esi,0x3
 800:	85 f6                            	test   esi,esi
 802:	74 3d                            	je     841 <debug.panicImpl+0x811>
 804:	89 74 24 08                      	mov    DWORD PTR [esp+0x8],esi
 808:	89 3c 24                         	mov    DWORD PTR [esp],edi
 80b:	c7 44 24 04 aa 00 00 00          	mov    DWORD PTR [esp+0x4],0xaa
 813:	89 45 f0                         	mov    DWORD PTR [ebp-0x10],eax
 816:	e8 fc ff ff ff                   	call   817 <debug.panicImpl+0x7e7>
 81b:	8b 45 04                         	mov    eax,DWORD PTR [ebp+0x4]
 81e:	89 44 24 08                      	mov    DWORD PTR [esp+0x8],eax
 822:	89 34 24                         	mov    DWORD PTR [esp],esi
 825:	c7 44 24 04 02 00 00 00          	mov    DWORD PTR [esp+0x4],0x2
 82d:	8b 4d f0                         	mov    ecx,DWORD PTR [ebp-0x10]
 830:	89 fa                            	mov    edx,edi
 832:	ff 53 08                         	call   DWORD PTR [ebx+0x8]
 835:	8b 85 18 ff ff ff                	mov    eax,DWORD PTR [ebp-0xe8]
 83b:	8b 9d 1c ff ff ff                	mov    ebx,DWORD PTR [ebp-0xe4]
 841:	8b b5 3c ff ff ff                	mov    esi,DWORD PTR [ebp-0xc4]
 847:	85 f6                            	test   esi,esi
 849:	75 0c                            	jne    857 <debug.panicImpl+0x827>
 84b:	89 5d ec                         	mov    DWORD PTR [ebp-0x14],ebx
 84e:	31 f6                            	xor    esi,esi
 850:	bb 04 00 00 00                   	mov    ebx,0x4
 855:	eb 18                            	jmp    86f <debug.panicImpl+0x83f>
 857:	81 fe 00 00 00 10                	cmp    esi,0x10000000
 85d:	0f 83 80 00 00 00                	jae    8e3 <debug.panicImpl+0x8b3>
 863:	89 5d ec                         	mov    DWORD PTR [ebp-0x14],ebx
 866:	8b 9d 34 ff ff ff                	mov    ebx,DWORD PTR [ebp-0xcc]
 86c:	c1 e6 04                         	shl    esi,0x4
 86f:	89 45 f0                         	mov    DWORD PTR [ebp-0x10],eax
 872:	8d bd 34 ff ff ff                	lea    edi,[ebp-0xcc]
 878:	85 f6                            	test   esi,esi
 87a:	74 43                            	je     8bf <debug.panicImpl+0x88f>
 87c:	89 74 24 08                      	mov    DWORD PTR [esp+0x8],esi
 880:	89 1c 24                         	mov    DWORD PTR [esp],ebx
 883:	c7 44 24 04 aa 00 00 00          	mov    DWORD PTR [esp+0x4],0xaa
 88b:	e8 fc ff ff ff                   	call   88c <debug.panicImpl+0x85c>
 890:	8b 45 04                         	mov    eax,DWORD PTR [ebp+0x4]
 893:	89 44 24 08                      	mov    DWORD PTR [esp+0x8],eax
 897:	89 34 24                         	mov    DWORD PTR [esp],esi
 89a:	c7 44 24 04 02 00 00 00          	mov    DWORD PTR [esp+0x4],0x2
 8a2:	8b 4d f0                         	mov    ecx,DWORD PTR [ebp-0x10]
 8a5:	89 da                            	mov    edx,ebx
 8a7:	8b 45 ec                         	mov    eax,DWORD PTR [ebp-0x14]
 8aa:	ff 50 08                         	call   DWORD PTR [eax+0x8]
 8ad:	8b 85 18 ff ff ff                	mov    eax,DWORD PTR [ebp-0xe8]
 8b3:	89 45 f0                         	mov    DWORD PTR [ebp-0x10],eax
 8b6:	8b 85 1c ff ff ff                	mov    eax,DWORD PTR [ebp-0xe4]
 8bc:	89 45 ec                         	mov    DWORD PTR [ebp-0x14],eax
 8bf:	b8 aa aa aa aa                   	mov    eax,0xaaaaaaaa
 8c4:	b9 19 00 00 00                   	mov    ecx,0x19
 8c9:	f3 ab                            	rep stos DWORD PTR es:[edi],eax
 8cb:	8b 5d a0                         	mov    ebx,DWORD PTR [ebp-0x60]
 8ce:	85 db                            	test   ebx,ebx
 8d0:	75 09                            	jne    8db <debug.panicImpl+0x8ab>
 8d2:	31 db                            	xor    ebx,ebx
 8d4:	bf 04 00 00 00                   	mov    edi,0x4
 8d9:	eb 25                            	jmp    900 <debug.panicImpl+0x8d0>
 8db:	81 fb 00 00 00 10                	cmp    ebx,0x10000000
 8e1:	72 17                            	jb     8fa <debug.panicImpl+0x8ca>
 8e3:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 8eb:	b9 25 00 00 00                   	mov    ecx,0x25
 8f0:	ba 10 00 00 00                   	mov    edx,0x10
 8f5:	e8 06 f7 ff ff                   	call   0 <builtin.default_panic>
 8fa:	8b 7d 98                         	mov    edi,DWORD PTR [ebp-0x68]
 8fd:	c1 e3 04                         	shl    ebx,0x4
 900:	8d 55 98                         	lea    edx,[ebp-0x68]
 903:	85 db                            	test   ebx,ebx
 905:	75 0b                            	jne    912 <debug.panicImpl+0x8e2>
 907:	8b 75 04                         	mov    esi,DWORD PTR [ebp+0x4]
 90a:	8b 45 ec                         	mov    eax,DWORD PTR [ebp-0x14]
 90d:	8b 4d f0                         	mov    ecx,DWORD PTR [ebp-0x10]
 910:	eb 40                            	jmp    952 <debug.panicImpl+0x922>
 912:	89 5c 24 08                      	mov    DWORD PTR [esp+0x8],ebx
 916:	89 3c 24                         	mov    DWORD PTR [esp],edi
 919:	c7 44 24 04 aa 00 00 00          	mov    DWORD PTR [esp+0x4],0xaa
 921:	e8 fc ff ff ff                   	call   922 <debug.panicImpl+0x8f2>
 926:	8b 75 04                         	mov    esi,DWORD PTR [ebp+0x4]
 929:	89 74 24 08                      	mov    DWORD PTR [esp+0x8],esi
 92d:	89 1c 24                         	mov    DWORD PTR [esp],ebx
 930:	c7 44 24 04 02 00 00 00          	mov    DWORD PTR [esp+0x4],0x2
 938:	8b 4d f0                         	mov    ecx,DWORD PTR [ebp-0x10]
 93b:	89 fa                            	mov    edx,edi
 93d:	8b 45 ec                         	mov    eax,DWORD PTR [ebp-0x14]
 940:	ff 50 08                         	call   DWORD PTR [eax+0x8]
 943:	8d 55 98                         	lea    edx,[ebp-0x68]
 946:	8b 8d 18 ff ff ff                	mov    ecx,DWORD PTR [ebp-0xe8]
 94c:	8b 85 1c ff ff ff                	mov    eax,DWORD PTR [ebp-0xe4]
 952:	c7 42 08 aa aa aa aa             	mov    DWORD PTR [edx+0x8],0xaaaaaaaa
 959:	c7 42 04 aa aa aa aa             	mov    DWORD PTR [edx+0x4],0xaaaaaaaa
 960:	c7 02 aa aa aa aa                	mov    DWORD PTR [edx],0xaaaaaaaa
 966:	8b 95 2c ff ff ff                	mov    edx,DWORD PTR [ebp-0xd4]
 96c:	89 74 24 08                      	mov    DWORD PTR [esp+0x8],esi
 970:	c7 44 24 04 02 00 00 00          	mov    DWORD PTR [esp+0x4],0x2
 978:	c7 04 24 ec 02 00 00             	mov    DWORD PTR [esp],0x2ec
 97f:	ff 50 08                         	call   DWORD PTR [eax+0x8]
 982:	e9 c7 fc ff ff                   	jmp    64e <debug.panicImpl+0x61e>
 987:	83 f8 01                         	cmp    eax,0x1
 98a:	0f 85 eb fd ff ff                	jne    77b <debug.panicImpl+0x74b>
 990:	65 c7 05 00 00 00 00 02 00 00 00 	mov    DWORD PTR gs:0x0,0x2
 99b:	31 db                            	xor    ebx,ebx
 99d:	8d 7d e0                         	lea    edi,[ebp-0x20]
 9a0:	83 fb 23                         	cmp    ebx,0x23
 9a3:	77 45                            	ja     9ea <debug.panicImpl+0x9ba>
 9a5:	8d 83 da 01 00 00                	lea    eax,[ebx+0x1da]
 9ab:	b9 23 00 00 00                   	mov    ecx,0x23
 9b0:	29 d9                            	sub    ecx,ebx
 9b2:	89 4c 24 08                      	mov    DWORD PTR [esp+0x8],ecx
 9b6:	89 44 24 04                      	mov    DWORD PTR [esp+0x4],eax
 9ba:	c7 04 24 02 00 00 00             	mov    DWORD PTR [esp],0x2
 9c1:	89 f1                            	mov    ecx,esi
 9c3:	89 fa                            	mov    edx,edi
 9c5:	e8 bc 05 00 00                   	call   f86 <heap.PageAllocator.resize+0x86>
 9ca:	66 83 bd c4 fa ff ff 00          	cmp    WORD PTR [ebp-0x53c],0x0
 9d2:	75 2d                            	jne    a01 <debug.panicImpl+0x9d1>
 9d4:	03 9d c0 fa ff ff                	add    ebx,DWORD PTR [ebp-0x540]
 9da:	0f 82 03 ff ff ff                	jb     8e3 <debug.panicImpl+0x8b3>
 9e0:	83 fb 23                         	cmp    ebx,0x23
 9e3:	75 bb                            	jne    9a0 <debug.panicImpl+0x970>
 9e5:	e9 91 fd ff ff                   	jmp    77b <debug.panicImpl+0x74b>
 9ea:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 9f2:	b9 00 00 00 00                   	mov    ecx,0x0
 9f7:	ba 24 00 00 00                   	mov    edx,0x24
 9fc:	e8 ff f5 ff ff                   	call   0 <builtin.default_panic>
 a01:	8d 75 e0                         	lea    esi,[ebp-0x20]
 a04:	89 f1                            	mov    ecx,esi
 a06:	e8 95 02 00 00                   	call   ca0 <builtin.returnError>
 a0b:	e9 85 fc ff ff                   	jmp    695 <debug.panicImpl+0x665>
 a10:	89 c3                            	mov    ebx,eax
 a12:	89 7d c4                         	mov    DWORD PTR [ebp-0x3c],edi
 a15:	89 04 24                         	mov    DWORD PTR [esp],eax
 a18:	c7 44 24 08 ec 02 00 00          	mov    DWORD PTR [esp+0x8],0x2ec
 a20:	c7 44 24 04 aa 00 00 00          	mov    DWORD PTR [esp+0x4],0xaa
 a28:	e8 fc ff ff ff                   	call   a29 <debug.panicImpl+0x9f9>
 a2d:	f6 c3 03                         	test   bl,0x3
 a30:	0f 85 e5 00 00 00                	jne    b1b <debug.panicImpl+0xaeb>
 a36:	89 74 24 04                      	mov    DWORD PTR [esp+0x4],esi
 a3a:	89 1c 24                         	mov    DWORD PTR [esp],ebx
 a3d:	c7 44 24 08 ec 02 00 00          	mov    DWORD PTR [esp+0x8],0x2ec
 a45:	e8 fc ff ff ff                   	call   a46 <debug.panicImpl+0xa16>
 a4a:	c7 85 e8 fe ff ff aa aa aa aa    	mov    DWORD PTR [ebp-0x118],0xaaaaaaaa
 a54:	c7 85 ec fe ff ff 00 00 00 00    	mov    DWORD PTR [ebp-0x114],0x0
 a5e:	c7 85 f0 fe ff ff 00 00 00 00    	mov    DWORD PTR [ebp-0x110],0x0
 a68:	8b 45 ec                         	mov    eax,DWORD PTR [ebp-0x14]
 a6b:	89 85 5c fe ff ff                	mov    DWORD PTR [ebp-0x1a4],eax
 a71:	8b 45 f0                         	mov    eax,DWORD PTR [ebp-0x10]
 a74:	89 85 58 fe ff ff                	mov    DWORD PTR [ebp-0x1a8],eax
 a7a:	a1 14 00 00 00                   	mov    eax,ds:0x14
 a7f:	89 ad 60 fe ff ff                	mov    DWORD PTR [ebp-0x1a0],ebp
 a85:	c7 85 64 fe ff ff 10 00 00 00    	mov    DWORD PTR [ebp-0x19c],0x10
 a8f:	89 85 6c fe ff ff                	mov    DWORD PTR [ebp-0x194],eax
 a95:	a1 10 00 00 00                   	mov    eax,ds:0x10
 a9a:	89 85 68 fe ff ff                	mov    DWORD PTR [ebp-0x198],eax
 aa0:	c7 85 74 fe ff ff 00 00 00 00    	mov    DWORD PTR [ebp-0x18c],0x0
 aaa:	c7 85 70 fe ff ff 00 00 00 00    	mov    DWORD PTR [ebp-0x190],0x0
 ab4:	8b 45 c4                         	mov    eax,DWORD PTR [ebp-0x3c]
 ab7:	89 85 78 fe ff ff                	mov    DWORD PTR [ebp-0x188],eax
 abd:	89 9d 7c fe ff ff                	mov    DWORD PTR [ebp-0x184],ebx
 ac3:	c7 85 80 fe ff ff c0 04 00 00    	mov    DWORD PTR [ebp-0x180],0x4c0
 acd:	8d bd 84 fe ff ff                	lea    edi,[ebp-0x17c]
 ad3:	b9 19 00 00 00                   	mov    ecx,0x19
 ad8:	be d0 04 00 00                   	mov    esi,0x4d0
 add:	f3 a5                            	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 adf:	66 c7 85 f4 fe ff ff aa aa       	mov    WORD PTR [ebp-0x10c],0xaaaa
 ae8:	c7 85 f8 fe ff ff 00 00 00 00    	mov    DWORD PTR [ebp-0x108],0x0
 af2:	c6 85 fc fe ff ff 01             	mov    BYTE PTR [ebp-0x104],0x1
 af9:	c7 85 fd fe ff ff 00 00 00 01    	mov    DWORD PTR [ebp-0x103],0x1000000
 b03:	8d 85 58 fe ff ff                	lea    eax,[ebp-0x1a8]
 b09:	80 b8 a8 00 00 00 00             	cmp    BYTE PTR [eax+0xa8],0x0
 b10:	0f 84 c6 fa ff ff                	je     5dc <debug.panicImpl+0x5ac>
 b16:	e9 ff fa ff ff                   	jmp    61a <debug.panicImpl+0x5ea>
 b1b:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 b23:	b9 36 00 00 00                   	mov    ecx,0x36
 b28:	ba 13 00 00 00                   	mov    edx,0x13
 b2d:	e8 ce f4 ff ff                   	call   0 <builtin.default_panic>
 b32:	90                               	nop
 b33:	90                               	nop
 b34:	90                               	nop
 b35:	90                               	nop
 b36:	90                               	nop
 b37:	90                               	nop
 b38:	90                               	nop
 b39:	90                               	nop
 b3a:	90                               	nop
 b3b:	90                               	nop
 b3c:	90                               	nop
 b3d:	90                               	nop
 b3e:	90                               	nop
 b3f:	90                               	nop

00000b40 <os.abort>:
 b40:	53                               	push   ebx
 b41:	57                               	push   edi
 b42:	56                               	push   esi
 b43:	81 ec a0 00 00 00                	sub    esp,0xa0
 b49:	8d 44 24 20                      	lea    eax,[esp+0x20]
 b4d:	89 44 24 14                      	mov    DWORD PTR [esp+0x14],eax
 b51:	c7 44 24 18 20 00 00 00          	mov    DWORD PTR [esp+0x18],0x20
 b59:	c7 44 24 10 00 00 00 00          	mov    DWORD PTR [esp+0x10],0x0
 b61:	8d 4c 24 10                      	lea    ecx,[esp+0x10]
 b65:	ba 06 00 00 00                   	mov    edx,0x6
 b6a:	e8 2c 00 00 00                   	call   b9b <os.abort+0x5b>
 b6f:	66 85 c0                         	test   ax,ax
 b72:	74 08                            	je     b7c <os.abort+0x3c>
 b74:	c7 44 24 10 00 00 00 00          	mov    DWORD PTR [esp+0x10],0x0
 b7c:	31 ff                            	xor    edi,edi
 b7e:	b8 af 00 00 00                   	mov    eax,0xaf
 b83:	31 db                            	xor    ebx,ebx
 b85:	b9 2c 03 00 00                   	mov    ecx,0x32c
 b8a:	31 d2                            	xor    edx,edx
 b8c:	be 08 00 00 00                   	mov    esi,0x8
 b91:	cd 80                            	int    0x80
 b93:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
 b98:	72 04                            	jb     b9e <os.abort+0x5e>
 b9a:	f7 d8                            	neg    eax
 b9c:	89 c7                            	mov    edi,eax
 b9e:	66 83 ff 16                      	cmp    di,0x16
 ba2:	0f 84 90 00 00 00                	je     c38 <os.abort+0xf8>
 ba8:	0f b7 c7                         	movzx  eax,di
 bab:	83 f8 0e                         	cmp    eax,0xe
 bae:	0f 84 84 00 00 00                	je     c38 <os.abort+0xf8>
 bb4:	85 c0                            	test   eax,eax
 bb6:	0f 85 7c 00 00 00                	jne    c38 <os.abort+0xf8>
 bbc:	b1 01                            	mov    cl,0x1
 bbe:	90                               	nop
 bbf:	90                               	nop
 bc0:	31 c0                            	xor    eax,eax
 bc2:	f0 0f b0 0d 08 00 00 00          	lock cmpxchg BYTE PTR ds:0x8,cl
 bca:	75 f4                            	jne    bc0 <os.abort+0x80>
 bcc:	c7 04 24 ac 03 00 00             	mov    DWORD PTR [esp],0x3ac
 bd3:	8d 4c 24 10                      	lea    ecx,[esp+0x10]
 bd7:	ba 06 00 00 00                   	mov    edx,0x6
 bdc:	e8 0c 01 00 00                   	call   ced <Thread.Futex.wait+0xd>
 be1:	66 83 f8 10                      	cmp    ax,0x10
 be5:	74 68                            	je     c4f <os.abort+0x10f>
 be7:	0f b7 c0                         	movzx  eax,ax
 bea:	85 c0                            	test   eax,eax
 bec:	75 78                            	jne    c66 <os.abort+0x126>
 bee:	b8 e0 00 00 00                   	mov    eax,0xe0
 bf3:	cd 80                            	int    0x80
 bf5:	89 c3                            	mov    ebx,eax
 bf7:	b8 ee 00 00 00                   	mov    eax,0xee
 bfc:	b9 06 00 00 00                   	mov    ecx,0x6
 c01:	cd 80                            	int    0x80
 c03:	31 ff                            	xor    edi,edi
 c05:	b8 af 00 00 00                   	mov    eax,0xaf
 c0a:	bb 01 00 00 00                   	mov    ebx,0x1
 c0f:	b9 38 04 00 00                   	mov    ecx,0x438
 c14:	31 d2                            	xor    edx,edx
 c16:	be 08 00 00 00                   	mov    esi,0x8
 c1b:	cd 80                            	int    0x80
 c1d:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
 c22:	72 04                            	jb     c28 <os.abort+0xe8>
 c24:	f7 d8                            	neg    eax
 c26:	89 c7                            	mov    edi,eax
 c28:	66 85 ff                         	test   di,di
 c2b:	74 50                            	je     c7d <os.abort+0x13d>
 c2d:	0f b7 c7                         	movzx  eax,di
 c30:	83 f8 0e                         	cmp    eax,0xe
 c33:	74 03                            	je     c38 <os.abort+0xf8>
 c35:	83 f8 16                         	cmp    eax,0x16
 c38:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 c40:	b9 e1 00 00 00                   	mov    ecx,0xe1
 c45:	ba 18 00 00 00                   	mov    edx,0x18
 c4a:	e8 b1 f3 ff ff                   	call   0 <builtin.default_panic>
 c4f:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 c57:	b9 92 00 00 00                   	mov    ecx,0x92
 c5c:	ba 17 00 00 00                   	mov    edx,0x17
 c61:	e8 9a f3 ff ff                   	call   0 <builtin.default_panic>
 c66:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 c6e:	b9 c9 00 00 00                   	mov    ecx,0xc9
 c73:	ba 17 00 00 00                   	mov    edx,0x17
 c78:	e8 83 f3 ff ff                   	call   0 <builtin.default_panic>
 c7d:	c6 05 00 00 00 00 00             	mov    BYTE PTR ds:0x0,0x0
 c84:	8d 4c 24 10                      	lea    ecx,[esp+0x10]
 c88:	ba 09 00 00 00                   	mov    edx,0x9
 c8d:	e8 2c 00 00 00                   	call   cbe <builtin.returnError+0x1e>
 c92:	e8 3c 02 00 00                   	call   ed3 <heap.PageAllocator.alloc+0xb3>
 c97:	90                               	nop
 c98:	90                               	nop
 c99:	90                               	nop
 c9a:	90                               	nop
 c9b:	90                               	nop
 c9c:	90                               	nop
 c9d:	90                               	nop
 c9e:	90                               	nop
 c9f:	90                               	nop

00000ca0 <builtin.returnError>:
 ca0:	56                               	push   esi
 ca1:	83 ec 08                         	sub    esp,0x8
 ca4:	8b 01                            	mov    eax,DWORD PTR [ecx]
 ca6:	3b 41 08                         	cmp    eax,DWORD PTR [ecx+0x8]
 ca9:	73 0c                            	jae    cb7 <builtin.returnError+0x17>
 cab:	8b 51 04                         	mov    edx,DWORD PTR [ecx+0x4]
 cae:	8b 74 24 0c                      	mov    esi,DWORD PTR [esp+0xc]
 cb2:	89 34 82                         	mov    DWORD PTR [edx+eax*4],esi
 cb5:	8b 01                            	mov    eax,DWORD PTR [ecx]
 cb7:	40                               	inc    eax
 cb8:	74 07                            	je     cc1 <builtin.returnError+0x21>
 cba:	89 01                            	mov    DWORD PTR [ecx],eax
 cbc:	83 c4 08                         	add    esp,0x8
 cbf:	5e                               	pop    esi
 cc0:	c3                               	ret
 cc1:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 cc9:	b9 25 00 00 00                   	mov    ecx,0x25
 cce:	ba 10 00 00 00                   	mov    edx,0x10
 cd3:	e8 28 f3 ff ff                   	call   0 <builtin.default_panic>
 cd8:	90                               	nop
 cd9:	90                               	nop
 cda:	90                               	nop
 cdb:	90                               	nop
 cdc:	90                               	nop
 cdd:	90                               	nop
 cde:	90                               	nop
 cdf:	90                               	nop

00000ce0 <Thread.Futex.wait>:
 ce0:	53                               	push   ebx
 ce1:	57                               	push   edi
 ce2:	56                               	push   esi
 ce3:	83 ec 10                         	sub    esp,0x10
 ce6:	89 cb                            	mov    ebx,ecx
 ce8:	31 ff                            	xor    edi,edi
 cea:	b8 f0 00 00 00                   	mov    eax,0xf0
 cef:	b9 80 00 00 00                   	mov    ecx,0x80
 cf4:	31 f6                            	xor    esi,esi
 cf6:	cd 80                            	int    0x80
 cf8:	3d 01 f0 ff ff                   	cmp    eax,0xfffff001
 cfd:	72 04                            	jb     d03 <Thread.Futex.wait+0x23>
 cff:	f7 d8                            	neg    eax
 d01:	89 c7                            	mov    edi,eax
 d03:	0f b7 c7                         	movzx  eax,di
 d06:	66 83 f8 16                      	cmp    ax,0x16
 d0a:	77 16                            	ja     d22 <Thread.Futex.wait+0x42>
 d0c:	b9 11 08 40 00                   	mov    ecx,0x400811
 d11:	0f a3 c1                         	bt     ecx,eax
 d14:	73 07                            	jae    d1d <Thread.Futex.wait+0x3d>
 d16:	83 c4 10                         	add    esp,0x10
 d19:	5e                               	pop    esi
 d1a:	5f                               	pop    edi
 d1b:	5b                               	pop    ebx
 d1c:	c3                               	ret
 d1d:	83 f8 0e                         	cmp    eax,0xe
 d20:	74 03                            	je     d25 <Thread.Futex.wait+0x45>
 d22:	83 f8 6e                         	cmp    eax,0x6e
 d25:	c7 44 24 04 00 00 00 00          	mov    DWORD PTR [esp+0x4],0x0
 d2d:	b9 e1 00 00 00                   	mov    ecx,0xe1
 d32:	ba 18 00 00 00                   	mov    edx,0x18
 d37:	e8 c4 f2 ff ff                   	call   0 <builtin.default_panic>
 d3c:	90                               	nop
 d3d:	90                               	nop
 d3e:	90                               	nop
 d3f:	90                               	nop

00000d40 <Thread.Mutex.FutexImpl.lockSlow>:
 d40:	83 ec 0c                         	sub    esp,0xc
 d43:	a1 04 00 00 00                   	mov    eax,ds:0x4
 d48:	83 f8 03                         	cmp    eax,0x3
 d4b:	74 0f                            	je     d5c <Thread.Mutex.FutexImpl.lockSlow+0x1c>
 d4d:	b8 03 00 00 00                   	mov    eax,0x3
 d52:	87 05 04 00 00 00                	xchg   DWORD PTR ds:0x4,eax
 d58:	85 c0                            	test   eax,eax
 d5a:	74 1e                            	je     d7a <Thread.Mutex.FutexImpl.lockSlow+0x3a>
 d5c:	b9 04 00 00 00                   	mov    ecx,0x4
 d61:	ba 03 00 00 00                   	mov    edx,0x3
 d66:	e8 75 ff ff ff                   	call   ce0 <Thread.Futex.wait>
 d6b:	b8 03 00 00 00                   	mov    eax,0x3
 d70:	87 05 04 00 00 00                	xchg   DWORD PTR ds:0x4,eax
 d76:	85 c0                            	test   eax,eax
 d78:	75 e2                            	jne    d5c <Thread.Mutex.FutexImpl.lockSlow+0x1c>
 d7a:	83 c4 0c                         	add    esp,0xc
 d7d:	c3                               	ret
